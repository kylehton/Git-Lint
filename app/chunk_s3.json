{
  "/Users/kht/repos/StockSense/client/app/layout.js-0-98b1ca2cc4e5adce6cad312a82a1fa7b6656fc1c9889d6583d223b0f29eb0aa2": {
    "text": "import \"./globals.css\";\nimport { Analytics } from \"@vercel/analytics/react\"\n\nexport",
    "path": "client/app/layout.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/client/app/layout.js-1-259502bb7c9cdf5878f41e52235dae840d43c397bb38722afe8d36e0c198439b": {
    "text": "const metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\nexport default",
    "path": "client/app/layout.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/StockSense/client/app/layout.js-2-ff57ef1988d6ab58d7e7dc88414783afe476f8dbc0ef3096cd7f8e86fabdf972": {
    "text": "function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        {children}\n        <Analytics />\n      </body>\n    </html>\n  );\n}",
    "path": "client/app/layout.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/client/app/page.js-0-ce05747b6ee4819e3105a8bc29692fdc1c3a6db47b3c1976e7e58767e115a944": {
    "text": "import SignInModal from \"./customcomponents/SignInModal\";\n\nexport default",
    "path": "client/app/page.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/client/app/page.js-1-7aeab3e31fc01f5e338dae4d1c8ce6609841824cfdf8200f10e2b45c549a28af": {
    "text": "function Home() {\n  return (\n    <div id=\"page-wrapper\" className=\"flex h-screen w-full bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 relative overflow-hidden\">\n      {/* Background stock chart pattern */}\n      <div className=\"absolute inset-0 opacity-10\">\n        <svg className=\"w-full h-full\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n          <path\n            d=\"M0,50 Q10,40 20,45 T40,35 T60,55 T80,45 T100,50\"\n            fill=\"none\"\n            stroke=\"white\"\n            strokeWidth=\"0.5\"\n          />\n          <path\n            d=\"M0,60 Q10,50 20,55 T40,45 T60,65 T80,55 T100,60\"\n            fill=\"none\"\n            stroke=\"white\"\n            strokeWidth=\"0.5\"\n          />\n        </svg>\n      </div>\n\n      <div className=\"flex flex-col items-center w-full relative z-10\">\n        <div id='google-sign-in-wrapper' className='absolute top-8 right-8'>\n          <SignInModal />\n        </div>\n        \n        <div id='intro-text-wrapper' className='mt-32 max-w-4xl px-8 text-center'>\n          <h1 className=\"font-bold text-7xl mb-6 bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\">\n            StockSense\n          </h1>\n          <p className='space-grotesk text-xl text-gray-300 leading-relaxed mb-12'>\n            Welcome to StockSense! Utilize an accessible platform that \n            keeps you updated with the power of AI! Gain valuable insight, track\n            trends, and make informed decisions with analytical confidence.\n            Sign up today to get started!\n          </p>\n          \n          {/* Feature highlights */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 mt-12\">\n            <div className=\"p-6 rounded-xl bg-gray-800/50 backdrop-blur-sm border border-gray-700 hover:border-indigo-500 transition-all duration-300\">\n              <h3 className=\"text-xl font-semibold text-indigo-400 mb-3\">AI-Powered Analysis</h3>\n              <p className=\"text-gray-400\">Get instant insights and sentiment analysis from the latest market news</p>\n            </div>\n            <div className=\"p-6 rounded-xl bg-gray-800/50 backdrop-blur-sm border border-gray-700 hover:border-indigo-500 transition-all duration-300\">\n              <h3 className=\"text-xl font-semibold text-indigo-400 mb-3\">Real-time Tracking</h3>\n              <p className=\"text-gray-400\">Monitor your favorite stocks with live updates and performance metrics</p>\n            </div>\n            <div className=\"p-6 rounded-xl bg-gray-800/50 backdrop-blur-sm border border-gray-700 hover:border-indigo-500 transition-all duration-300\">\n              <h3 className=\"text-xl font-semibold text-indigo-400 mb-3\">Smart Watchlist</h3>\n              <p className=\"text-gray-400\">Create and manage your personalized stock watchlist with ease</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
    "path": "client/app/page.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-0-1eb06b54113f88854bae578a37bd21074846594ee8b440593cf585ad6d429c40": {
    "text": "'use client';\nimport dotenv from \"dotenv\";\nimport { useEffect } from \"react\";\nimport { useRouter } from 'next/navigation';",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-2-53b623ce95d7a35be1e815952ce7a946680f1de4e374b6cc12c75f97fd57c5c0": {
    "text": "const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL;",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-3-40eaf364bf81758bb143c8cfd0aba301a216404307338355d530f13bc35a4406": {
    "text": "const clientID = process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID;",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-5-dfd8bff2e20b304568b927fe8f61fe7a817d0eaae28343f5c1d9e0cafe5e2e7f": {
    "text": "const initGoogleSignIn = () => {\n        if (window.google) {\n          window.google.accounts.id.initialize({\n            client_id: clientID,\n            callback: handleCredentialResponse,\n          });\n  \n          // Render the full-size Google Sign-In button\n          window.google.accounts.id.renderButton(\n            document.getElementById(\"sign-in-button\"), \n            {\n              theme: \"outline\", \n              size: \"large\", \n              type: \"standard\" \n            }\n          );\n        }\n      };\n  \n      // Load the Google Sign-In script and initialize Google Sign-In",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-6-fb8c6afd3ca673782052fd34bf0e0a275c26b910165ea71b5adfef065d0cf3dc": {
    "text": "const script = document.createElement('script');\n      script.src = 'https://accounts.google.com/gsi/client';\n      script.async = true;\n      script.defer = true;\n      document.body.appendChild(script);\n  \n      script.onload = initGoogleSignIn;\n  \n      return () => {\n        document.body.removeChild(script);\n      };\n\n    }, [clientID]);",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-8-80e12fa3b91b0d07e0f8ae4aca5afcd72ae5778676bc19a9487bb35d4a854c6f": {
    "text": "const match = document.cookie.match(/XSRF-TOKEN=([^;]+)/);\n      return match ? decodeURIComponent(match[1]) : null;\n    }\n    \n    async",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-10-4c77c1c9c05a1bdaaefa5971edc923cc31d2ca2ef865ed842cad09562d95543e": {
    "text": "const xsrfToken = await fetch(`${SERVER_URL}xsrf`, {\n              method: 'GET',\n              credentials: 'include',\n              headers: {\n                  'Content-Type': 'application/json',\n              }\n          });\n          \n          return xsrfToken.headers.get('x-xsrf-token');\n      } catch (error) {\n          console.error(\"Error fetching XSRF token:\", error);\n          throw error;\n      }\n    }",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 10
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-11-6ba3c0748ccc2da28c2c2a42fc9d9e12abdd52a5a4b75341f6b665d42fd030c5": {
    "text": "const handleCredentialResponse = async (response) => {\n      if (response.credential) {\n        //",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 11
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-13-078eae55c5f495c1c833556781b22513690fc1864e6bf7604a3a6827c82a563a": {
    "text": "const xsrf = await getXSRFTokenFromCookie();\n        //response.credential is the JWT token for the authenticated user",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 13
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-14-c761f496d8955d8e1e85382e22df7884bd1e454272503d23c6f4caa599def0fb": {
    "text": "const payload = JSON.parse(atob((response.credential).split(\".\")[1]));",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 14
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/GoogleSignIn.js-15-b15e2fc634ae1c5f986657886b4374b704b18e92c28e0637519502ed5f52e335": {
    "text": "const res = await fetch(`${SERVER_URL}google/auth?id=${response.credential}`, {\n          method: \"POST\",\n          credentials: \"include\", \n          headers: {\n              \"X-Xsrf-Token\": `${xsrf}`,\n              \"Content-Type\": \"application/json\",\n          },\n        })\n        if (res.ok) {\n          await res.text();\n          if (res.ok)\n            router.push('/dashboard');\n        }\n        else {\n          alert(\"Failed to authenticate Google account. Please try again.\");\n        }\n\n      };\n    };\n  \n    return (\n      <div id=\"signin-container\">\n        <div id=\"sign-in-button\" className=\"justify-center\"></div> {/* Google sign-in button will be rendered here */}\n      </div>\n    );\n};\n  \nexport default GoogleSignIn;",
    "path": "client/app/customcomponents/GoogleSignIn.js",
    "chunk_id": 15
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/SignInModal.js-0-8b1eb26b0b46a09b35b609fe06eda0dba5bf07f851a61ca0da5c26a7712cbe1f": {
    "text": "'use client';\nimport React, { useState } from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport GoogleSignIn from './GoogleSignIn';",
    "path": "client/app/customcomponents/SignInModal.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/SignInModal.js-1-bb00770703cc8c5f6f11149580cef407a002785dc81b6af81897bdc12656e916": {
    "text": "const style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'rgba(31, 41, 55, 0.95)',\n  backdropFilter: 'blur(8px)',\n  boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n  p: 4,\n  borderRadius: '1rem',\n  border: '1px solid rgba(75, 85, 99, 0.4)',\n};\n\nexport default",
    "path": "client/app/customcomponents/SignInModal.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/StockSense/client/app/customcomponents/SignInModal.js-5-8b2dc9d6028d350b888d584de1918d3e894892500558a47713fe627fc1586211": {
    "text": "const handleClose = () => setOpen(false);\n\n  return (\n    <div>\n      <div id='button-wrapper' className='relative'>\n        <button \n          variant=\"outlined\"\n          className='relative px-6 py-2 text-white border rounded-lg border-indigo-500/50 hover:border-indigo-400 hover:bg-indigo-500/10 font-medium text-base transition-all duration-200'\n          onClick={handleOpen}\n        >\n          SIGN IN\n        </button>\n      </div>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <h2 className='text-3xl font-bold text-center mb-6 bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent'>\n            Welcome!\n          </h2>\n          <div className='flex justify-center'>          \n            <GoogleSignIn />\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n}",
    "path": "client/app/customcomponents/SignInModal.js",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-0-10e3a218e6b9f5767e286bf95df55989838a6341e50ac3ce3c58ac1437c763ff": {
    "text": "'use client';\nimport './dashboard.css';\nimport React, { useState, useEffect } from 'react';\nimport { MinusIcon } from 'lucide-react';\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\"\nimport { Label } from \"@/components/ui/label\"\nimport StockChart from './dashboardcomponents/StockChart';\n\nexport default",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-6-a1afd4acc613a46393e5315d0935f620c5c077f5a32b1607162d2e8df92b48dc": {
    "text": "const [selectedStock, setSelectedStock] = useState(\"\");",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-7-596883e9856a536026da7ee04c0063d7e79b1ff7516ab1dd8c43bd635b1c8b63": {
    "text": "const SERVER_URL = process.env.NEXT_PUBLIC_SERVER_URL;\n\n    // Fixed getXSRFToken",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-9-b9b2ae65523f4d83a868e1cda811fa2226603981d9a82830a5f0435400918be4": {
    "text": "const getXSRFToken = async () => {\n      try {\n        // Make request to fetch CSRF token",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 9
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-10-5267ac9969c03c3ccc7169fdc526f2c20f903b240a85d2136c1f886c1d20457b": {
    "text": "const res = await fetch(`${SERVER_URL}xsrf`, {\n          method: 'GET',\n          credentials: 'include', // Important for cookies\n        });\n\n        if (!res.ok) {\n          throw new Error(`Failed to get XSRF token: ${res.status}`);\n        }\n\n        // Parse the JSON response properly",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 10
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-11-83cd1a0b37cddd40644824e73b78a096763a0cb70ec7fa5294ed583ea60a6484": {
    "text": "const data = await res.json();\n        console.log(\"Token response:\", data);\n\n        // If token exists in response, use it\n        if (data && data.token) {\n          console.log(\"\u2705 XSRF token from JSON:\", data.token);\n          return data.token;\n        }\n\n        // Fallback to cookie - make sure to decode it",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 11
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-12-75eda114a079293ceca272549bc07c331cab34ec88bd09e994f1d34fc52bd3ab": {
    "text": "const cookieMatch = document.cookie.match(/XSRF-TOKEN=([^;]+)/);\n        if (cookieMatch) {",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 12
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-13-fa7ff05bb8f735a04c7910907c3bcadba025b8bf0a19e26ecd96a1d0c1a6be85": {
    "text": "const tokenFromCookie = decodeURIComponent(cookieMatch[1]);\n          console.log(\"\u2705 XSRF token from cookie:\", tokenFromCookie);\n          return tokenFromCookie;\n        }\n\n        throw new Error(\"No XSRF token found in response or cookies\");\n      } catch (error) {\n        console.error(\"\u274c Failed to retrieve CSRF token:\", error);\n        throw error;\n      }\n    };\n\n    // Fixed addUser function\n    async",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 13
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-14-e436a81172eb553bd184a898dadb328e2d06ee27eb6b98c52217f9698db39cec": {
    "text": "function addUser() {\n      try {\n        // Get the token first",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 14
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-15-d0df96dd5bd1bc5b3bb61a08b8edb7d8ac83335b8fc240c59f0bc7370c09b888": {
    "text": "const token = await getXSRFToken();\n        console.log(\"Using token for adduser:\", token);",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 15
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-16-0bd58a0cf00b005951b104131f25fed38d647f035d350cd3f635f490fb918f4b": {
    "text": "const response = await fetch(`${SERVER_URL}db/adduser`, {\n          method: 'POST',\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-XSRF-TOKEN': token  // Make sure header name matches Spring config\n          }\n        });\n        \n        if (!response.ok) {",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 16
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-17-dd80cc455deb6d27400b2bc2a8f6488c5762a20ed9e7821d65cdd79bf5a9e8f4": {
    "text": "const errorText = await response.text();\n          throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorText}`);\n        }\n        \n        return await response.text();\n      } catch (error) {\n        console.error(\"Error in addUser:\", error);\n        throw error;\n      }\n    }",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 17
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-19-4c39e68a58ae397f5b5a1e9b739a41c540911c5158b9f8d1a75aeb5bb5cc01b1": {
    "text": "const res = await fetch(`${SERVER_URL}debug/session`, {\n            method: 'GET',\n            credentials: 'include',\n        });",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 19
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-20-24ab62fe2fbce403b2200ec10de7455b1d7774eb702c6dbb6696f5883c9c9154": {
    "text": "const data = await res.json();\n        console.log(\"\ud83e\uddea DEBUG SESSION INFO:\", data);\n    };",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 20
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-23-cc348b283ecb65168148fd088abea8db9159bc59c425dc62bf506c9d8eb19d15": {
    "text": "const response = await fetch(`${SERVER_URL}db/addsymbol?symbol=${symbol}`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'X-XSRF-TOKEN': token,\n                'Content-Type': 'application/json',\n            }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        setSymbol(\"\");\n        await loadWatchlist();\n        setOpen(false);\n    };",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 23
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-24-f76cc5b20d9677fced9ab5198c534df74b82d5fe1d003dde1c336300a7813c92": {
    "text": "const handleDeleteSymbol = async (stockSymbol) => {",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 24
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-26-eaf6bcd1b3fc10e76623059841fa30552cf8510e4c8152a6ddc851692965470c": {
    "text": "const response = await fetch(`${SERVER_URL}db/deletesymbol?symbol=${stockSymbol}`, {\n            method: 'DELETE',\n            credentials: 'include',\n            headers: {\n                'X-XSRF-TOKEN': token,\n                'Content-Type': 'application/json',\n            }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        await loadWatchlist();\n    };\n\n    async",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 26
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-28-d5441a614bfca13a33f87f74fe3349a9ccb80343a0a0679b4a9c1bc86cb4e71d": {
    "text": "const response = await fetch(`${SERVER_URL}db/check`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        return await response.json();\n    }\n\n    async",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 28
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-30-a096d3ace08c09f6c41ae6a5a419f65bdf594f1f4bce87559c7dc81c52720ea5": {
    "text": "const response = await fetch(`${SERVER_URL}db/getsymbols`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: { 'Content-Type': 'application/json' }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 30
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-31-4ea1610d2c0347adc5e09be9cb270ae4bb8ef7c470ae6c7068339c35bf729ee7": {
    "text": "const data = await response.json();\n        setWatchlist(data);\n    }",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 31
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-34-5f48041a999130875c42e63a9eb8f097aca82bd245b1a9ee2bfad76fe3863579": {
    "text": "const response = await fetch(`${SERVER_URL}db/setnewskey?symbol=${stockSymbol}&key=${key}`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'X-XSRF-TOKEN': token,\n                'Content-Type': 'application/json',\n            }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        return await response.text();\n    };",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 34
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-37-1698b1f0e0b9d0082f54946c2874d93a567fd435bcabdd24ee20d77eae4df9d3": {
    "text": "const response = await fetch(`${SERVER_URL}db/getnewskey?symbol=${stockSymbol}`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'X-XSRF-TOKEN': token,\n                'Content-Type': 'application/json',\n            }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        return await response.text();\n    };",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 37
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-40-de17b738dad92c6bc57b666f675d2a86fdbc83a16f3afac6b726a65aa7308b79": {
    "text": "const response = await fetch(`${SERVER_URL}s3/retrieve?key=stock_news/${symbol}/${key}.json`, {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'X-XSRF-TOKEN': token,\n                'Content-Type': 'application/json',\n            }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);\n        return await response.text();\n    };",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 40
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-42-bbfe626400130721ae524056874194e58532c2447628375b1e04d87ea44a7ef9": {
    "text": "const token = await getXSRFToken();\n        setSelectedStock(stockSymbol);",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 42
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-43-d5dae70e144b17899f852aca4a46bfde01c008bf04eab0e005c9787958060c77": {
    "text": "const response = await fetch(`${SERVER_URL}news/generate?symbol=${stockSymbol}`, {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'X-XSRF-TOKEN': token,\n                'Content-Type': 'application/json',\n            }\n        });\n        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 43
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-45-e5d3db016e82e50da92543a405a3efbed75a3f4bc035ff9c265c00e2d9386c24": {
    "text": "const newsKey = await setNewsKey(stockSymbol, keyResponse);",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 45
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-46-97ff6f213bfd889077e7515e8c0142f50c363ce566fceb480fc0189da00676c4": {
    "text": "const newsText = await fetchNewsData(stockSymbol, newsKey);\n        return newsText;\n    };",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 46
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-47-548b3bcdced621b938438d1158fbf6777940b623090c05209afe9aa2f7f3a4a1": {
    "text": "const handleStockDataOpen = async (stockSymbol) => {\n        try {\n            setSelectedStock(stockSymbol);",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 47
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-49-2200498871f9b975ffa0eecd6c2e8eeed1f0057aac0231ca95688233d2e0d82b": {
    "text": "let newsText = await fetchNewsData(stockSymbol, retrieveKey);\n            if (!newsText || newsText.trim() === \"\") {\n                newsText = await newGenerateNews(stockSymbol);\n            }",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 49
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-51-e1ad3afafb7e505c3c4a286a31750cd2c3626479ea6a4be6dcdf409037ee1ee6": {
    "text": "const storeItems = splitNews[0].map((_, i) => ({\n                title: splitNews[0][i],\n                publisher: splitNews[1][i],\n                url: splitNews[2][i],\n                score: splitNews[3][i]\n            }));\n            setNewsItems(storeItems);\n        } catch (error) {\n            console.error(\"Error loading news data:\", error);\n            setNewsItems([]);\n        }\n    };\n\n    useEffect(() => {\n        async",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 51
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-52-def56bd8c1a4f20a824b17611c068ab4ac14fa4577b40031241a60156ceccd05": {
    "text": "function initialize() {\n          await debugSession(); // See current session\n          await getXSRFToken(); // This will set cookie + cache the token",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 52
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-53-8044768c9aca795e8030294e3f94a4313d267d360d3533ceefb4d53f46ff4fe7": {
    "text": "const userExists = await checkUser();\n          if (!userExists) await addUser(); // Safe CSRF protected\n          await loadWatchlist();\n        }\n\n          // Debug current cookies\n          console.log(\"Current cookies:\", document.cookie);\n          \n          // Monitor CSRF token usage",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 53
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-54-40250c4538c2144a991f538547115569346784005f7fd67df8b224672e4138bd": {
    "text": "const originalFetch = window.fetch;\n          window.fetch = function(...args) {\n            if (args[1] && args[1].headers) {",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 54
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-55-b892dc50099ff639e03bd9cd8413054f37dafa1737ff95f1b1dfe4583c9ba7d2": {
    "text": "const headers = args[1].headers;\n              console.log(\"Request URL:\", args[0]);\n              console.log(\"Request headers:\", headers);\n              if (headers['X-XSRF-TOKEN']) {\n                console.log(\"Using XSRF token:\", headers['X-XSRF-TOKEN']);\n              }\n            }\n            return originalFetch.apply(this, args);\n          };\n      \n        initialize();\n      }, []);      \n\n\n  return (\n    <div id=\"page-wrapper\" className=\"text-zinc-200 min-h-screen max-h-screen overflow-hidden w-full bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 p-4 md:p-8 relative\">\n      {/* Background decorative elements */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-indigo-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-purple-500/5 rounded-full blur-3xl\"></div>\n        <div className=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-96 h-96 bg-blue-500/5 rounded-full blur-3xl\"></div>\n        {/* Grid pattern overlay */}\n        <div className=\"absolute inset-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:14px_24px]\"></div>\n      </div>\n\n      <div className=\"relative z-10 flex items-center justify-center\">\n        <div id=\"watchlist-wrapper\" className=\"rounded-2xl mt-8 h-[85vh] w-full md:w-[600px] bg-gray-800/90 flex flex-col p-4 md:p-6 shadow-2xl hover:shadow-indigo-500/10 transition-all duration-300 border border-gray-700/50\">\n          {/* Decorative top bar */}\n          <div className=\"absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-indigo-500 via-purple-500 to-indigo-500 rounded-t-2xl\"></div>\n          \n          <div id=\"watchlist-header\" className=\"flex items-center justify-between mb-6 mt-2\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-2 h-8 bg-gradient-to-b from-indigo-500 to-purple-500 rounded-full\"></div>\n              <h1 className=\"font-bold text-2xl bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\">Watchlist</h1>\n            </div>\n            <Dialog open={open} onOpenChange={setOpen}>\n              <DialogTrigger asChild>\n                <Button type=\"submit\" className=\"ml-auto px-4 bg-indigo-600 hover:bg-indigo-700 transition-all duration-200 shadow-md\">+</Button>\n              </DialogTrigger>\n              <DialogContent className=\"w-full max-w-[90vw] sm:max-w-[425px] bg-gray-800 border border-gray-700/50 shadow-2xl\">\n                <DialogHeader>\n                  <DialogTitle className=\"text-xl font-semibold text-gray-100\">Add a Stock Symbol</DialogTitle>\n                  <DialogDescription className=\"text-gray-400\">\n                    Type the 4-character stock symbol you would like to add, then press the 'Add' button.\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"grid gap-4 py-4\">\n                  <div className=\"grid grid-cols-4 items-center gap-4\">\n                    <Label htmlFor=\"name\" className=\"text-right text-gray-300\">Symbol</Label>\n                    <Input \n                      type=\"text\" \n                      maxLength=\"4\" \n                      pattern=\"[A-Z]{4}\" \n                      id=\"name\" \n                      value={symbol} \n                      onChange={(e) => setSymbol(e.target.value.toUpperCase())} \n                      placeholder=\"AMZN, TSLA . . .\" \n                      className=\"col-span-3 bg-gray-700/50 border-gray-600 text-gray-100 focus:ring-2 focus:ring-indigo-500 transition-all duration-200\"\n                      required \n                    />\n                  </div>\n                </div>\n                <DialogFooter>\n                  <Button className='bg-indigo-600 hover:bg-indigo-700 text-white font-semibold transition-all duration-200 shadow-md' type=\"submit\" onClick={handleAddSymbol}>Add</Button>\n                </DialogFooter>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {/* Empty state design */}\n          {watchlist.length === 0 && (\n            <div className=\"flex-1 flex flex-col items-center justify-center text-center p-8\">\n              <div className=\"w-16 h-16 mb-4 rounded-full bg-indigo-500/10 flex items-center justify-center\">\n                <svg className=\"w-8 h-8 text-indigo-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                </svg>\n              </div>\n              <h2 className=\"text-xl font-semibold text-gray-300 mb-2\">Your Watchlist is Empty</h2>\n              <p className=\"text-gray-400 max-w-sm\">Add your first stock symbol to start tracking market news and sentiment analysis.</p>\n            </div>\n          )}\n\n          <div id=\"watchlist-components\" className=\"mt-4 space-y-2 overflow-y-auto pr-2 flex-1\">\n            {watchlist.map((stock, index) => (\n              <div key={index} className=\"flex items-center justify-between p-3 rounded-xl hover:bg-gray-700/50 transition-all duration-200 group border border-transparent hover:border-gray-600/50\">\n                <h1 className=\"font-semibold text-lg\">\n                  <Button \n                    onClick={() => handleStockDataOpen(stock)} \n                    variant=\"ghost\" \n                    className=\"hover:text-indigo-400 transition-colors duration-200 text-gray-200\"\n                  >\n                    {stock}\n                  </Button>\n                </h1>\n                <Button \n                  className='w-8 h-8 bg-red-500 hover:bg-red-600 transition-all duration-200 shadow-md' \n                  type='submit' \n                  size=\"icon\" \n                  onClick={() => handleDeleteSymbol(stock.toString())}\n                >\n                  <MinusIcon className='text-white' />\n                </Button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <Dialog open={!!selectedStock} onOpenChange={() => setSelectedStock(\"\")}>\n          <DialogContent className=\"max-w-[90vw] max-h-[90vh] bg-gray-800 border border-gray-700/50 shadow-2xl overflow-y-auto\">\n            {selectedStock && (\n              <>\n                <div className=\"flex justify-between items-center mb-6\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"w-2 h-8 bg-gradient-to-b from-indigo-500 to-purple-500 rounded-full\"></div>\n                    <h1 className=\"text-3xl font-bold bg-gradient-to-r from-indigo-400 to-purple-400 bg-clip-text text-transparent\">{selectedStock}</h1>\n                  </div>\n                </div>\n                <div className=\"w-full flex flex-col gap-6\">\n                  <div className=\"h-[200px] sm:h-[250px] md:h-[475px] mb-12 relative bg-gray-900/50 rounded-xl border border-gray-700/50\">\n                    <div className=\"absolute top-0 left-0 w-full h-1 bg-gradient-to-r from-emerald-500 via-teal-500 to-emerald-500\"></div>\n                    <StockChart symbol={selectedStock} />\n                  </div>\n                  <p className=\"text-xl font-semibold m-2 mb-6 text-gray-200 flex items-center gap-2\">\n                    <span className=\"w-1.5 h-6 bg-gradient-to-b from-emerald-500 to-teal-500 rounded-full\"></span>\n                    {selectedStock} News Articles\n                  </p>\n                  {newsItems.map((item, index) => {",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 55
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-58-75fd40fd27997183179eea11e03a2d3cba832984227dd9fd4bbfb41a08f8616f": {
    "text": "let scoreColorClass = \"bg-gray-700/50 text-gray-300\";",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 58
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/page.js-59-bbd3048f2bd2bb75224275315f614d5af0b07f66dec303b399248eb46433b4e0": {
    "text": "let scoreGradient = \"\";\n                    if (score >= 0.7) {\n                      scoreColorClass = \"bg-emerald-600/90 text-white\";\n                      scoreGradient = \"from-emerald-500 to-teal-500\";\n                    } else if (score >= 0.3) {\n                      scoreColorClass = \"bg-emerald-900/90 text-emerald-200\";\n                      scoreGradient = \"from-emerald-600 to-teal-600\";\n                    } else if (score <= -0.7) {\n                      scoreColorClass = \"bg-rose-600/90 text-white\";\n                      scoreGradient = \"from-rose-500 to-pink-500\";\n                    } else if (score <= -0.3) {\n                      scoreColorClass = \"bg-rose-900/90 text-rose-200\";\n                      scoreGradient = \"from-rose-600 to-pink-600\";\n                    }\n\n                    return (\n                      <div key={index} className=\"flex flex-col mb-6 p-6 border border-gray-700/50 rounded-xl hover:bg-gray-700/50 transition-all duration-200 group backdrop-blur-sm\">\n                        <div className=\"flex items-start justify-between gap-4\">\n                          <h3 className=\"text-lg font-semibold mb-2 text-gray-100 group-hover:text-emerald-400 transition-colors duration-200 flex-1\">{item.title}</h3>\n                          <div className={`px-3 py-1.5 rounded-full font-medium ${scoreColorClass} transition-colors duration-200 shadow-md flex items-center gap-1.5 min-w-[100px] justify-center`}>\n                            <div className={`w-2 h-2 rounded-full bg-gradient-to-r ${scoreGradient}`}></div>\n                            {formattedScore}\n                          </div>\n                        </div>\n                        <div className=\"flex justify-between items-center text-sm text-gray-400 mb-3\">\n                          <p className=\"font-medium flex items-center gap-2\">\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z\" />\n                            </svg>\n                            {item.publisher}\n                          </p>\n                        </div>\n                        <a \n                          href={item.url} \n                          target=\"_blank\" \n                          rel=\"noopener noreferrer\" \n                          className=\"text-emerald-400 hover:text-emerald-300 text-sm font-medium hover:underline transition-colors duration-200 inline-flex items-center group/link\"\n                        >\n                          Read more \n                          <svg className=\"w-4 h-4 ml-1 transform group-hover/link:translate-x-1 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                          </svg>\n                        </a>\n                      </div>\n                    );\n                  })}\n                </div>\n              </>\n            )}\n          </DialogContent>\n        </Dialog>\n      </div>\n    </div>\n  );\n}",
    "path": "client/app/dashboard/page.js",
    "chunk_id": 59
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-0-fefc5d6476139d7002633365e732e63dabe95046133d04973177f71de5e5263c": {
    "text": "import React, { useState, useEffect, useRef } from 'react';\nimport { CandlestickSeries, createChart } from 'lightweight-charts';",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-8-a4077e61f20cea49ee6d7c76f7bc749f8baa68205e86d22ce4fc9c1b324c0b4d": {
    "text": "const rapidAPIKey = process.env.NEXT_PUBLIC_RAPIDAPI_KEY;",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-9-bf39814b26d2e1e8c6c82ead7ff3663b5a92aec68ac68eb6610f4439b5695760": {
    "text": "const getStockData = async () => {\n    console.log(\"Fetching stock data for symbol:\", symbol);",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 9
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-10-65108b05350285f23893427867a9d5fc990223415a73ed3bbeb5741590918927": {
    "text": "const response = await fetch(\n        `https://apidojo-yahoo-finance-v1.p.rapidapi.com/stock/v2/get-chart?interval=15m&symbol=${symbol}&range=5d&region=US`,\n        {\n            method: 'GET',\n            headers: {\n              'X-RapidAPI-Key': rapidAPIKey,\n              'X-RapidAPI-Host': 'apidojo-yahoo-finance-v1.p.rapidapi.com',\n            },\n        }\n    );",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 10
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-13-4510e26914cbf16aa79c03479b521723e6c2b26bd3057a0aef1f2b2ef9661eb9": {
    "text": "const prices = data.chart.result[0].indicators.quote[0];",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 13
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-14-6d81f8402722ae605fc4f2db1e64c623323cdd19caf141c3a595d15eb3552a47": {
    "text": "const currentPrice = data.chart.result[0].meta.regularMarketPrice;",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 14
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-15-77cf586192a6a279796bb49a922bd1faf897ec02ea520dc1c4d47325243d2382": {
    "text": "const prevPrice = data.chart.result[0].meta.chartPreviousClose;\n\n    setMarketPrice(currentPrice);\n    setPrevClosing(prevPrice);",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 15
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-17-083651548be17f85a1c67bbcf903aa4d1670617e2ad6725706cf91c545744f6f": {
    "text": "const dateToCheck = new Date();\n    dateToCheck.setDate(todaysDate.getDate() - 1)\n    dateToCheck.setHours(16, 45, 0, 0)",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 17
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-18-836f897fea042e154c72f5b97868388623da4fbe9bd2b89370d2169b856d1ec2": {
    "text": "const dateInUnix = Math.floor(dateToCheck/1000);\n    console.log(todaysDate)\n    console.log(dateToCheck)\n    console.log(\"Yest closing time:\", dateInUnix)",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 18
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-19-e2dbe80a3a7b016cf69a36406ce07aaae432b643a84e1bd6d0eb1f0d3482bb32": {
    "text": "const formatted = timestamps.map((t, i) => ({\n        time: t,\n        open: prices.open[i],\n        high: prices.high[i],\n        low: prices.low[i],\n        close: prices.close[i],\n    }));",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 19
  },
  "/Users/kht/repos/StockSense/client/app/dashboard/dashboardcomponents/StockChart.js-20-353286dd7fe02687baf7c0483c12127b4a9295d47bddb43580f3a95bb17ed17a": {
    "text": "const closingPrice = formatted.find(entry => Number(entry.time) === Number(dateInUnix));\n\n    if (closingPrice) {\n      console.log(\"Open price:\", closingPrice.open);\n    } else {\n      console.error(\"No entry found for Unix time:\", dateInUnix);\n    }\n    \n    setPrevClosing(closingPrice)\n    setData(formatted);\n  };\n\n  useEffect(() => {\n    getStockData();\n  }, [symbol]);\n\n  useEffect(() => {\n    console.log(\"Checking chart\")\n    if (!chartContainerRef.current || data.length === 0) return;\n\n    console.log(\"Creating chart for symbol:\", symbol);\n    chartRef.current = createChart(chartContainerRef.current, {\n      width: 1200,\n      height: 375,\n      layout: {\n        background: { type: 'solid', color: '#1a1b1e' },\n        textColor: '#d1d5db',\n      },\n      grid: {\n        vertLines: { color: '#2d2d2d' },\n        horzLines: { color: '#2d2d2d' },\n      },\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n        borderColor: '#2d2d2d',\n      },\n      crosshair: {\n        mode: 1,\n        vertLine: {\n          color: '#4f46e5',\n          width: 1,\n          style: 1,\n          labelBackgroundColor: '#4f46e5',\n        },\n        horzLine: {\n          color: '#4f46e5',\n          width: 1,\n          style: 1,\n          labelBackgroundColor: '#4f46e5',\n        },\n      },\n      rightPriceScale: {\n        borderColor: '#2d2d2d',\n      },\n    });\n\n    seriesRef.current = chartRef.current.addSeries(CandlestickSeries, {\n      upColor: '#22c55e',\n      downColor: '#ef4444',\n      borderVisible: false,\n      wickUpColor: '#22c55e',\n      wickDownColor: '#ef4444',\n    });    \n    console.log(\"Setting data for chart:\", data);\n    seriesRef.current.setData(data);\n\n    return () => {\n      chartRef.current.remove(); // Cleanup on unmount\n    };\n  }, [data]);\n\n  return (\n    <div id=\"stock-chart-data-wrapper\" className=\"flex flex-col bg-[#1a1b1e] rounded-xl p-6 shadow-lg\">\n        <div id=\"stock-chart-container\" ref={chartContainerRef}\n          style={{ position: 'relative', width: '100%' }}\n          className=\"rounded-lg overflow-hidden\"\n        />\n        <div id=\"stock-data-container\" className=\"flex justify-between items-center mt-4 px-2\">\n            <div className=\"flex items-center space-x-4\">\n                <div className=\"flex flex-col\">\n                    <span className=\"text-gray-400 text-sm\">Current Price</span>\n                    <span className=\"text-white text-xl font-semibold\">${marketPrice?.toFixed(2)}</span>\n                </div>\n                <div className=\"flex flex-col\">\n                    <span className=\"text-gray-400 text-sm\">Previous Close</span>\n                    <span className=\"text-white text-xl font-semibold\">${prevClosing?.close?.toFixed(2)}</span>\n                </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n                <span className={`text-sm font-medium ${marketPrice > prevClosing?.close ? 'text-green-500' : 'text-red-500'}`}>\n                    {marketPrice > prevClosing?.close ? '\u2191' : '\u2193'} \n                    {((marketPrice - prevClosing?.close) / prevClosing?.close * 100).toFixed(2)}%\n                </span>\n            </div>\n        </div>\n    </div>\n  );\n};\n\nexport default StockChart;",
    "path": "client/app/dashboard/dashboardcomponents/StockChart.js",
    "chunk_id": 20
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/StockAnalysisApplication.java-0-6582a6251219bd4444dc32d77377de1dd394dc667f26856ff3fe300eae7199b8": {
    "text": "package com.stockanalysis;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.annotation.ComponentScan;\n\n@SpringBootApplication\n@ComponentScan(basePackages = \"com.stockanalysis\")  // Make sure the base package is set correctly",
    "path": "server/src/main/java/com/stockanalysis/StockAnalysisApplication.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/StockAnalysisApplication.java-3-22177bb264ea36dadfffb21f5993aab86e8601b22a704a80f8d384d224756859": {
    "text": "public static void main(String[] args) {\n        SpringApplication.run(StockAnalysisApplication.class, args);\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/StockAnalysisApplication.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/DataBaseConfig.java-0-324b01fe3581563f334340d9e72ddda6691bff3036435e228b82b41f3644a496": {
    "text": "package com.stockanalysis.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.beans.factory.annotation.Value;\n\nimport java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\n@Configuration",
    "path": "server/src/main/java/com/stockanalysis/config/DataBaseConfig.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/DataBaseConfig.java-3-1240345da311fbf5fad3a997ca47fe383a60a173f909722b7c8a5a742e320f44": {
    "text": "private Connection conn;\n\n    @Value(\"${DATABASE_URL}\")",
    "path": "server/src/main/java/com/stockanalysis/config/DataBaseConfig.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/DataBaseConfig.java-7-57f8c21812fb31208b6c7310b821e470ad6e7b85ec0b52f2aea34454506d47e9": {
    "text": "public Statement dbStatement() throws SQLException {\n        // Connect to the PostgreSQL database\n        if (conn == null || conn.isClosed()) {\n            conn = DriverManager.getConnection(url, user, password);\n        }\n        \n        // Create a Statement object\n        Statement stmt = conn.createStatement();\n        return stmt;\n    }",
    "path": "server/src/main/java/com/stockanalysis/config/DataBaseConfig.java",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/DataBaseConfig.java-8-ee5d6eac492b39fb19243d36f0f18836dcdd7d58f0241949cdfdde42a96f05b6": {
    "text": "public void closeConnection(Statement stmt) {\n        try {\n            if (stmt != null) {\n                stmt.close();\n            }\n            if (conn != null && !conn.isClosed()) {\n                conn.close();\n            }\n        } catch (SQLException e) {\n            e.printStackTrace();\n        }\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/config/DataBaseConfig.java",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java-0-77bfcc5bcb73c271a2c0e33343cd9666f373a89c473ce8304d5bbddfdee05f2a": {
    "text": "package com.stockanalysis.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.http.HttpMethod;\nimport org.springframework.http.HttpStatus;\nimport org.springframework.security.authentication.UsernamePasswordAuthenticationToken;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.http.SessionCreationPolicy;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.context.SecurityContextHolder;\nimport org.springframework.security.web.SecurityFilterChain;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\nimport org.springframework.security.web.csrf.CookieCsrfTokenRepository;\nimport org.springframework.security.web.csrf.CsrfTokenRequestAttributeHandler;\nimport org.springframework.security.web.csrf.XorCsrfTokenRequestAttributeHandler;\nimport org.springframework.web.cors.CorsConfiguration;\nimport org.springframework.web.cors.CorsConfigurationSource;\nimport org.springframework.web.cors.UrlBasedCorsConfigurationSource;\nimport org.springframework.web.filter.OncePerRequestFilter;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport jakarta.servlet.FilterChain;\nimport jakarta.servlet.ServletException;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpServletResponse;\nimport jakarta.servlet.http.HttpSession;\n\nimport java.io.IOException;\nimport java.util.Arrays;\nimport java.util.List;\n\n@Configuration\n@EnableWebSecurity",
    "path": "server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java-3-4bab08f4caded2cca0fb5f7b7c70656ffef79de4c19fb691cdc406b5edf3c989": {
    "text": "private static final Logger logger = LoggerFactory.getLogger(WebSecurityConfig.class);\n\n    @Bean",
    "path": "server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java-4-7eeca39a50a781ed61f2418432139d29c0d38c9dd115b19fdf20a493f5f27136": {
    "text": "public CorsConfigurationSource corsConfigurationSource() {\n        CorsConfiguration configuration = new CorsConfiguration();\n        configuration.setAllowedOrigins(Arrays.asList(\"http://localhost:3000\", \"https://stock-sense-client.vercel.app\"));\n        configuration.setAllowedMethods(Arrays.asList(\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\"));\n        configuration.setAllowedHeaders(Arrays.asList(\n            \"Content-Type\", \"Authorization\", \"X-XSRF-TOKEN\",\n            \"Access-Control-Allow-Origin\", \"Access-Control-Allow-Credentials\",\n            \"Access-Control-Allow-Headers\", \"JSESSIONID\"\n        ));\n        configuration.setAllowCredentials(true);\n        configuration.setExposedHeaders(Arrays.asList(\"Set-Cookie\", \"X-XSRF-TOKEN\"));\n\n        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();\n        source.registerCorsConfiguration(\"/**\", configuration);\n        return source;\n    }\n\n    @Bean",
    "path": "server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java",
    "chunk_id": 4
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java-5-b564834f8e2187c2aac5453f3aa0133364f7cccbdee79a09fdbee6588b600606": {
    "text": "public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\n        logger.info(\"Configuring security filter chain...\");\n\n        CookieCsrfTokenRepository repo = CookieCsrfTokenRepository.withHttpOnlyFalse();\n        repo.setCookieCustomizer(builder -> builder.sameSite(\"None\"));\n\n\n        XorCsrfTokenRequestAttributeHandler xorHandler = new XorCsrfTokenRequestAttributeHandler();\n        xorHandler.setCsrfRequestAttributeName(\"_csrf\");\n\n\n        http\n            .cors(cors -> cors.configurationSource(corsConfigurationSource()))\n            .csrf(csrf -> csrf\n                .csrfTokenRepository(repo)\n                .csrfTokenRequestHandler(xorHandler)\n                .ignoringRequestMatchers(\"/xsrf\", \"/google/auth\", \"/db/check\", \"/debug/session\", \"/db/testdb\", \"/getsession\", \"/db/getsymbols\")\n            )\n            .sessionManagement(session -> session\n                .sessionCreationPolicy(SessionCreationPolicy.IF_REQUIRED) // Enforce stateless session\n            )\n            .authorizeHttpRequests(auth -> {\n                logger.debug(\"Configuring authorization rules...\");\n                auth\n                    .requestMatchers(HttpMethod.OPTIONS, \"/**\").permitAll() // Allow CORS preflight requests\n                    .requestMatchers(\"/xsrf\", \"/google/auth\", \"/db/check\", \"/debug/auth\", \"/error\").permitAll()\n                    .requestMatchers(\"/getsession\", \"/db/getsymbols\").permitAll()\n                    .requestMatchers(\"/db/addsymbol\", \"/db/deletesymbol\", \"/db/adduser\", \"/news/generate\", \"/news/get\",\n                                     \"/s3/retrieve\", \"/db/setnewskey\", \"/db/getnewskey\").hasAuthority(\"USER\")\n                    .anyRequest().authenticated();\n            })\n            .addFilterBefore(new OncePerRequestFilter() {\n                @Override",
    "path": "server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java-6-0ddb900fb25ea9b6404e582e4863607480087caa64a116debcbf9a149b92d427": {
    "text": "protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, \n                                                FilterChain chain) throws ServletException, IOException {\n                    HttpSession session = request.getSession(false);\n            \n                    if (session != null) {\n                        Object userId = session.getAttribute(\"USER_ID\");\n            \n                        // Fixed the problematic debug statements by using string concatenation\n                        logger.debug(\"Session ID: \" + session.getId());\n                        logger.debug(\"USER_ID from session: \" + userId);\n            \n                        Authentication currentAuth = SecurityContextHolder.getContext().getAuthentication();\n                        if (userId != null && (currentAuth == null || !currentAuth.isAuthenticated())) {\n                            List<GrantedAuthority> authorities = Arrays.asList(new SimpleGrantedAuthority(\"USER\"));\n                            Authentication auth = new UsernamePasswordAuthenticationToken(userId.toString(), null, authorities);\n                            SecurityContextHolder.getContext().setAuthentication(auth);\n                        }\n                    } else {\n                        logger.debug(\"No session found. Clearing security context.\");\n                        SecurityContextHolder.clearContext(); // Allow anonymous access if no session\n                    }\n            \n                    chain.doFilter(request, response);\n                }\n            }, UsernamePasswordAuthenticationFilter.class)\n            \n            .exceptionHandling(ex -> ex\n                .authenticationEntryPoint((request, response, authException) -> {\n                    String requestPath = request.getServletPath();\n\n                    if (requestPath.matches(\"/xsrf|/google/auth|/db/check|/debug/auth|/getsession|/db/getsymbols\")) {\n                        response.setStatus(HttpStatus.OK.value());\n                        return;\n                    }\n\n                    // Use simple logging approach to avoid issues\n                    logger.error(\"Auth error: \" + authException.getMessage());\n                    \n                    try {\n                        HttpSession session = request.getSession(false);\n                        if (session != null) {\n                            Object userId = session.getAttribute(\"USER_ID\");\n                            Object csrfToken = session.getAttribute(\"org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.CSRF_TOKEN\");\n\n                            // Use string concatenation to avoid method signature issues\n                            logger.info(\"Session ID: \" + session.getId());\n                            logger.info(\"USER_ID: \" + (userId != null ? userId.toString() : \"null\"));\n                            logger.info(\"CSRF Token (session): \" + (csrfToken != null ? csrfToken.toString() : \"null\"));\n                        } else {\n                            logger.info(\"No session present during authentication failure.\");\n                        }\n\n                        String csrfHeader = request.getHeader(\"X-XSRF-TOKEN\");\n                        logger.info(\"CSRF Token (header): \" + (csrfHeader != null ? csrfHeader : \"null\"));\n                    } catch (Exception e) {\n                        logger.error(\"Failed to log session/csrf debugging\", e);\n                    }\n\n                    response.setStatus(HttpStatus.UNAUTHORIZED.value());\n                    response.getWriter().write(\"Authentication required\");\n                })\n            );\n\n        logger.info(\"Security filter chain configured successfully\");\n        return http.build();\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/config/WebSecurityConfig.java",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/SessionConfig.java-0-614677a3ec8d1990d10938c1a119b1bd543dde451f6f2c146b55337c6b967e05": {
    "text": "package com.stockanalysis.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;\n\n@Configuration\n@EnableRedisHttpSession // enables Redis-backed session storage",
    "path": "server/src/main/java/com/stockanalysis/config/SessionConfig.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/SessionConfig.java-2-c358e932d7c00bed51da8eb5e455fb325e5802b0342062efb35939914f8aec0e": {
    "text": "class SessionConfig {\n    // @EnableRedisHttpSession does everything needed for session management\n}",
    "path": "server/src/main/java/com/stockanalysis/config/SessionConfig.java",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/AWSConfig.java-0-77adebdf9e5b500d39921ceb6373b07b5c3f6aae53a688f3e6e0a661d2afb983": {
    "text": "package com.stockanalysis.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.beans.factory.annotation.Value;\nimport jakarta.annotation.PostConstruct;\n\nimport software.amazon.awssdk.auth.credentials.AwsBasicCredentials;\nimport software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;\nimport software.amazon.awssdk.regions.Region;\nimport software.amazon.awssdk.services.s3.S3Client;\n\n@Configuration",
    "path": "server/src/main/java/com/stockanalysis/config/AWSConfig.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/AWSConfig.java-7-ebe841b34509545ec32aba3309462e9d7559ae118103713db5c27240c5d0c921": {
    "text": "public AWSConfig(\n        @Value(\"${AWS_BUCKET_NAME:}\") String bucketName,\n        @Value(\"${AWS_ACCESS_KEY_ID:}\") String accessKey,\n        @Value(\"${AWS_SECRET_ACCESS_KEY:}\") String secretKey,\n        @Value(\"${AWS_REGION:}\") String region\n    ) {\n        this.bucketName = bucketName;\n        this.accessKey = accessKey;\n        this.secretKey = secretKey;\n        this.region = region;\n    }\n\n    @PostConstruct",
    "path": "server/src/main/java/com/stockanalysis/config/AWSConfig.java",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/AWSConfig.java-8-d6c7241fe85352a537ebb38673c7a6dbb854371460a8ea2d49602d33e8632062": {
    "text": "public void log() {\n        System.out.println(\"=== AWS CONFIG ===\");\n        System.out.println(\"Bucket: \" + bucketName);\n        System.out.println(\"Key: \" + (accessKey.isEmpty() ? \"\u274c\" : \"\u2705\"));\n        System.out.println(\"Secret: \" + (secretKey.isEmpty() ? \"\u274c\" : \"\u2705\"));\n        System.out.println(\"Region: \" + region);\n        System.out.println(\"===================\");\n    }\n\n    @Bean",
    "path": "server/src/main/java/com/stockanalysis/config/AWSConfig.java",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/AWSConfig.java-9-067d892b2fb0bd0c29e59a1a51871c42dfa5f80a06c71e48d5b70249ac780905": {
    "text": "public S3Client s3Client() {\n        return S3Client.builder()\n            .region(Region.of(region))\n            .credentialsProvider(StaticCredentialsProvider.create(\n                AwsBasicCredentials.create(accessKey, secretKey)\n            ))\n            .build();\n    }",
    "path": "server/src/main/java/com/stockanalysis/config/AWSConfig.java",
    "chunk_id": 9
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/config/AWSConfig.java-10-38386e3361236ef1101ac743b2082b9760276d2aef49e5c2faf1d39974c4dec0": {
    "text": "public String getBucketName() {\n        return bucketName;\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/config/AWSConfig.java",
    "chunk_id": 10
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/XSRFController.java-0-9aa910fbb79cd2d7f178378441844da1448660d1a64b038aeacfc7df60a919de": {
    "text": "package com.stockanalysis.controller;\n\nimport jakarta.servlet.http.HttpServletRequest;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.security.web.csrf.CsrfToken;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.Map;\n\n@RestController\n@RequestMapping",
    "path": "server/src/main/java/com/stockanalysis/controller/XSRFController.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/XSRFController.java-3-a9635f189d75f737637222ee0af9160317c1ca2a1f045b0997f169c0187e0335": {
    "text": "public ResponseEntity<Map<String, String>> getXsrfToken(HttpServletRequest request) {\n        CsrfToken csrfToken = (CsrfToken) request.getAttribute(CsrfToken.class.getName());\n\n        if (csrfToken == null) {\n            return ResponseEntity.badRequest().body(Map.of(\"error\", \"XSRF token not found\"));\n        }\n\n        String token = csrfToken.getToken(); // \u2705 Force generation and session storage\n        System.out.println(\"Backend-generated XSRF Token: \" + token);\n\n        return ResponseEntity.ok()\n                .header(\"X-XSRF-TOKEN\", csrfToken.getToken())\n                .body(Map.of(\"token\", csrfToken.getToken()));\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/XSRFController.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/S3Controller.java-0-6f7c6b7b5a96d55f45717c761a6847306192efdbdedb0a7b2ead6ee0733cc6f5": {
    "text": "package com.stockanalysis.controller;\n\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport com.stockanalysis.service.S3Service;\n\nimport jakarta.servlet.http.HttpSession;\n\n@RestController\n@RequestMapping(\"/s3\")",
    "path": "server/src/main/java/com/stockanalysis/controller/S3Controller.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/S3Controller.java-4-d9b8c935fb5b4ae86c240debba14fd2d64cd90597fa513d0c84a2ed60e2fe0f0": {
    "text": "public S3Controller(S3Service s3Service) {\n        this.s3Service = s3Service;\n    }\n\n    // no controller upload function because upload is automatically handled after\n    // scraping for easier passthrough of data parameters to S3 bucket\n\n    @RequestMapping(\"/retrieve\")",
    "path": "server/src/main/java/com/stockanalysis/controller/S3Controller.java",
    "chunk_id": 4
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/S3Controller.java-5-a0619977affce9ee7909ead05aa0319a687126e83b54e2885426c8c573b195cf": {
    "text": "public String[][] retrieveFromS3(@RequestParam String key, HttpSession session) {\n        return s3Service.readNewsObjectContent(key);\n    }\n\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/S3Controller.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-0-4c6f27d86252bcb224083a29876291ebda8c2ceabd738c21bf75b5332f1dbf70": {
    "text": "package com.stockanalysis.controller;\nimport com.stockanalysis.config.DataBaseConfig;\n\nimport jakarta.servlet.http.HttpSession;\n\nimport com.stockanalysis.service.DBService;\n\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.sql.Statement;\nimport java.util.ArrayList;\nimport java.sql.SQLException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n\n@RestController\n@RequestMapping(\"/db\") // Base URL for all endpoints in this controller",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-2-88aea0056dfb4a27f673164742c2e2f69a6dbc67740afc469ff77b235a7ce59b": {
    "text": "class DBController {\n\n    Statement stmt;\n    Connection conn;\n    DBService dbService;\n    \n    @Autowired",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-3-acd06b120d664e2ac8cd11aa26f7d439b3d3af48a2a8d31444ac2de4d98c607a": {
    "text": "public DBController(DataBaseConfig dbConfig) {\n        try {\n            this.stmt = dbConfig.dbStatement();\n            this.dbService = new DBService();\n        } catch (SQLException e) {\n            e.printStackTrace();\n            throw new RuntimeException(\"Failed to initialize database connection\", e);\n        }\n    }\n\n    @GetMapping(\"/testdb\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-4-29c0cc22d0f7cb8245bc294661681d142c93feed218a8f53a3caa092b4aa2700": {
    "text": "public void testDB() {\n        try {\n            // Execute a query and get a ResultSet\n            ResultSet rs = stmt.executeQuery(\"SELECT * FROM users\");\n\n            // Process the ResultSet\n            while (rs.next()) {\n                String email = rs.getString(\"email\");  \n                System.out.println(\"Email: \" + email);\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    @GetMapping(\"/getsymbols\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 4
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-5-aa103c746fb46702a97ee66d0972db5a22ef6c28d088c869ffe7d029dc67caa5": {
    "text": "public ArrayList<String> getSymbolsFromDB(HttpSession session) {\n        String google_id = session.getAttribute(\"USER_ID\").toString();\n        return dbService.getSymbols(google_id, this.stmt);\n    }\n\n    @GetMapping(\"/check\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-6-0322845f512e142b908c2a0c86e2abbb9ffc78411d399ba5c9cc641004b366d4": {
    "text": "public Boolean checkUser(HttpSession session) {\n        try {\n            System.out.println(\"Current session: \"+session.getId());\n            System.out.println(\"Searching for user id: \"+session.getAttribute(\"USER_ID\"));\n            String google_id = session.getAttribute(\"USER_ID\").toString();\n            return dbService.checkUserExists(google_id, this.stmt);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n        \n    }\n\n    @PostMapping(\"/adduser\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-7-0a7cf36a1def63400a020af6b7422b03aa3a89ef70c28ea960e0b813bfcfee80": {
    "text": "public String addUser(HttpSession session) \n    {\n        try {\n            String google_id = session.getAttribute(\"USER_ID\").toString();\n            String email = session.getAttribute(\"email\").toString();\n            return dbService.addUserToDB(google_id, email, this.stmt);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to add user: \"+e;\n        }\n    }\n\n    @PostMapping(\"/addsymbol\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-8-e5106ecfb45fe30d5ad830433cb3281667d071cddbf198e7bbf6377b4302e282": {
    "text": "public String addToDB(HttpSession session, @RequestParam String symbol) {\n        try {\n        String user_id = session.getAttribute(\"USER_ID\").toString();\n        dbService.addSymbol(user_id, this.stmt, symbol);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to add symbol: \"+e;\n        }\n        return \"Successfully added symbol: \"+symbol;\n    }\n\n    @DeleteMapping(\"/deletesymbol\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-9-7ece8d5ba43ce15d0cb53279acc717b361cd17537ac9c9c5a1c159e2da3407fe": {
    "text": "public String DeleteFromDB(HttpSession session, @RequestParam String symbol) {\n        try{\n        String google_id = session.getAttribute(\"USER_ID\").toString();\n        dbService.deleteSymbol(google_id, this.stmt, symbol);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to delete symbol: \"+e;\n        }\n        return \"Successfully deleted symbol: \"+symbol;\n    }\n\n    @PostMapping(\"/setnewskey\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 9
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-10-d17b116bee4b2d771ac291caa8b45e2b7b57eebde8ca613f7e371560df8a70bd": {
    "text": "public String setS3NewsKey(HttpSession session, @RequestParam String symbol, @RequestParam String key) {\n        try\n        {\n            return dbService.storeNewsKey(symbol, key, this.stmt);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            return \"Failed to store news key: \"+e;\n        }\n    }\n\n    @GetMapping(\"/getnewskey\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 10
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DBController.java-11-21e2515422bd8b3f4f9f7364b4f23dd7f2127ba529c3ffaef961680eb07a752c": {
    "text": "public String getS3NewsKey(@RequestParam String symbol) {\n        try\n        {\n            return dbService.getNewsKey(symbol, this.stmt);\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            return \"Failed to get news key: \"+e;\n        }\n    }\n\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/DBController.java",
    "chunk_id": 11
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java-0-661f0944f1d62186dce5b406a96e49f76f6ccf72da879b17f85e17f14be8e52a": {
    "text": "package com.stockanalysis.controller;\nimport com.stockanalysis.service.GenerateNewsService;\nimport com.stockanalysis.service.S3Service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/news\")",
    "path": "server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java-3-c948ec39c5b777de727ede1dd63caad50ab682bee32c6cb80969bb4e0bcc06c6": {
    "text": "private final GenerateNewsService generateNewsService;",
    "path": "server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java-5-f562ae578e393e5b24078aa53bce55d0cf5420e5add5e90c5133f9b8625fde4d": {
    "text": "public GenerateNewsController(GenerateNewsService generateNewsService, S3Service s3Service) {\n        this.generateNewsService = generateNewsService;\n        this.s3Service = s3Service;\n        \n    }\n\n    @PostMapping(\"/generate\")",
    "path": "server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java-6-f92b9370c11483645dbc726e477b27af44c5c169f403daaf6983bb2c62fd889a": {
    "text": "public String generateNews(@RequestParam String symbol) {\n        // generates news, places it into S3 bucket, then returns its respective S3 key\n        String[][] news = generateNewsService.generateNews(symbol);\n        String s3Key = s3Service.uploadAVNewsData(symbol, news);\n        return s3Key;\n    }\n\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/GenerateNewsController.java",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/JSessionController.java-0-ac6264f77582fa0428fd14367a5b78605fa75933e03a7465778cf0eff69d663c": {
    "text": "package com.stockanalysis.controller;\n\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n\nimport jakarta.servlet.http.HttpSession;\n\n@RestController",
    "path": "server/src/main/java/com/stockanalysis/controller/JSessionController.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/JSessionController.java-2-8cae4ccb59b12f1b01d2848aaa784a653373f8d61fa7296b58c3f3e2f89d3bd2": {
    "text": "class JSessionController {\n    \n    @GetMapping(\"/getsession\")",
    "path": "server/src/main/java/com/stockanalysis/controller/JSessionController.java",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/JSessionController.java-3-f354b99f91acc4adc837342b5d0da5d3b868a937041baf50d78a3763be258764": {
    "text": "public ResponseEntity<String> getSession(HttpSession session)\n    {\n        return ResponseEntity.ok().body((session.getId() + \" - \" + session.getAttribute(\"USER_ID\")));\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/JSessionController.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java-0-59596804f91865b3b4c7ade944f49d03c15f601895f32bf0ac984a827e577fb0": {
    "text": "package com.stockanalysis.controller;\n\nimport com.google.api.client.googleapis.auth.oauth2.GoogleIdToken;\nimport com.stockanalysis.service.GoogleAuthenticationService;\nimport java.io.IOException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestParam;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport jakarta.servlet.http.HttpSession;\n\n@RestController\n@RequestMapping(\"/google\")",
    "path": "server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java-3-cc72846b00ae78dcd35cf679eaaa1d36e3a3635ed6fa43c38bfa8a9041911e69": {
    "text": "private GoogleAuthenticationService googleAuthenticationService;\n\n    @Autowired",
    "path": "server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java-4-4a263a92d7fa1e1f03c538dea802024322e69870c44c878a8aaad249c934fd28": {
    "text": "public GoogleAuthenticationController(GoogleAuthenticationService googleAuthenticationService)\n    {\n        this.googleAuthenticationService = googleAuthenticationService;\n    }\n\n    @PostMapping(\"/auth\")",
    "path": "server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java",
    "chunk_id": 4
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java-5-b75546ad9ccfbba509325973f3bb88c897f49a6192308fc151121222a071d910": {
    "text": "public ResponseEntity<String> authenticateUser(@RequestParam String id, HttpSession session) {\n        try {\n\n            GoogleIdToken.Payload payload = googleAuthenticationService.authenticate(id);\n            String userId = payload.getSubject();\n            String email = payload.getEmail();\n            \n            session.setAttribute(\"USER_ID\", userId);\n            session.setAttribute(\"email\", email);\n            System.out.println(\"Authenticating and storing user: \" + session.getAttribute(\"email\"));\n            System.out.println(\"Session ID: \" + session.getId());\n\n            return ResponseEntity.ok().body(\"Authenticated user: \" + session.getAttribute(\"email\"));\n        } catch (IOException e) {\n            return ResponseEntity.status(500).body(\"Authentication error: \" + e.getMessage());\n        }\n    }\n\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/GoogleAuthenticationController.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DebugAuthController.java-0-77060b060f47d67dc5c23e396932d120e0ab0c765f75eebbbd7d9ebc2bebc296": {
    "text": "package com.stockanalysis.controller;\n\nimport org.springframework.security.web.csrf.CsrfToken;\n\nimport java.util.Map;\nimport jakarta.servlet.http.HttpServletRequest;\nimport jakarta.servlet.http.HttpSession;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@RequestMapping(\"/debug\")\n@RestController",
    "path": "server/src/main/java/com/stockanalysis/controller/DebugAuthController.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DebugAuthController.java-2-28ade481d25e5449b61ba4a37c79bd9da1b4e8e23f3b431f66105fff17080a60": {
    "text": "class DebugAuthController {\n\n    @GetMapping(\"/session\")",
    "path": "server/src/main/java/com/stockanalysis/controller/DebugAuthController.java",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/controller/DebugAuthController.java-3-a3f605467b876034d330b4833517bbd54f973c3ab27c25d9b7e9dae7a1f7bc48": {
    "text": "public Map<String, String> debugAuth(HttpServletRequest request) {\n        HttpSession session = request.getSession(false);\n        CsrfToken token = (CsrfToken) request.getAttribute(\"_csrf\");\n\n        return Map.of(\n            \"sessionId\", session != null ? session.getId() : \"null\",\n            \"userId\", session != null ? String.valueOf(session.getAttribute(\"USER_ID\")) : \"null\",\n            \"csrfToken\", token != null ? token.getToken() : \"null\"\n        );\n}\n\n}",
    "path": "server/src/main/java/com/stockanalysis/controller/DebugAuthController.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/S3Service.java-0-5ced1b8bddf8501438a06851bb045df2ed12dab53c9fb2b254f8cd4bb6133703": {
    "text": "package com.stockanalysis.service;\n\nimport com.stockanalysis.config.AWSConfig;\n\nimport software.amazon.awssdk.core.ResponseInputStream;\nimport software.amazon.awssdk.core.sync.RequestBody;\nimport software.amazon.awssdk.services.s3.S3Client;\nimport software.amazon.awssdk.services.s3.model.GetObjectRequest;\nimport software.amazon.awssdk.services.s3.model.GetObjectResponse;\nimport software.amazon.awssdk.services.s3.model.PutObjectRequest;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.fasterxml.jackson.core.type.TypeReference;\n\nimport java.nio.charset.StandardCharsets;\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.UUID;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service",
    "path": "server/src/main/java/com/stockanalysis/service/S3Service.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/S3Service.java-5-e057e23c5604ab6c905befe308acd941330dd3194404bcc2f0a0a8b36c0c20fe": {
    "text": "private final ObjectMapper objectMapper;\n\n    @Autowired",
    "path": "server/src/main/java/com/stockanalysis/service/S3Service.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/S3Service.java-6-d50662219bf6eab99f969d76020a5935ad4c6f91a69369380d162e593157273e": {
    "text": "public S3Service(S3Client s3Client, AWSConfig awsConfig) {\n        this.s3Client = s3Client;\n        this.bucketName = awsConfig.getBucketName();\n        this.objectMapper = new ObjectMapper();\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/S3Service.java",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/S3Service.java-7-0af536789b4c9dedaa7ae3d46d31c57ac8a121c2719fbb387337a4601d6d4718": {
    "text": "public String uploadAVNewsData(String stockSymbol, String[][] newsArray) {\n        try {\n            // Generate a unique key for the S3 object using UUID\n            String uniqueId = UUID.randomUUID().toString().substring(0, 8);\n            String s3Key = \"stock_news/\" + stockSymbol + \"/\" + uniqueId + \".json\";\n            \n            // Convert the 2D array to a JSON string\n            ObjectMapper objectMapper = new ObjectMapper();\n            String jsonPayload = objectMapper.writeValueAsString(newsArray);\n            \n            // Upload JSON to S3\n            PutObjectRequest putObjectRequest = PutObjectRequest.builder()\n                    .bucket(bucketName)\n                    .key(s3Key)\n                    .contentType(\"application/json\")\n                    .build();\n    \n            s3Client.putObject(putObjectRequest, RequestBody.fromString(jsonPayload, StandardCharsets.UTF_8));\n    \n            System.out.println(\"Successfully uploaded news data to S3: \" + bucketName + \"/\" + s3Key);\n            return uniqueId;\n        } catch (Exception e) {\n            System.err.println(\"Error uploading news data to S3: \" + e.getMessage());\n            throw new RuntimeException(\"Failed to upload news data to S3\", e);\n        }\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/S3Service.java",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/S3Service.java-8-82d8b9b74cca41036c066f72bedcd8e599b5d98a968069b0ddcc8c3065adc554": {
    "text": "public String[][] readNewsObjectContent(String objectKey) {\n        GetObjectRequest getObjectRequest = GetObjectRequest.builder()\n                .bucket(bucketName)\n                .key(objectKey)\n                .build();\n    \n        try (ResponseInputStream<GetObjectResponse> response = s3Client.getObject(getObjectRequest)) {\n            // Read the content as a string\n            String jsonContent = new String(response.readAllBytes());\n            \n            // Parse the JSON string back to a 2D array\n            ObjectMapper objectMapper = new ObjectMapper();\n            return objectMapper.readValue(jsonContent, String[][].class);\n        } catch (Exception e) {\n            return null;\n        }\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/service/S3Service.java",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GenerateNewsService.java-0-98a6e5ddbf5ea57544a1815d27602bf904bc0fd63f0611e79ef9a8ad26db34a4": {
    "text": "package com.stockanalysis.service;\n\nimport org.springframework.stereotype.Service;\nimport org.springframework.beans.factory.annotation.Value;\n\nimport java.net.http.HttpClient;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpResponse;\nimport java.net.URI;\n\nimport org.json.JSONArray;\nimport org.json.JSONObject;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.List;\n\n@Service",
    "path": "server/src/main/java/com/stockanalysis/service/GenerateNewsService.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GenerateNewsService.java-2-1fc22f397aba28766a37bf7b2db8d9bc416e0a542e832827efe642d8238251d9": {
    "text": "class GenerateNewsService {\n\n    @Value(\"${AV_API_KEY}\")",
    "path": "server/src/main/java/com/stockanalysis/service/GenerateNewsService.java",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GenerateNewsService.java-3-d0ed06d3d9dddcf48a1f600bc9e7c379949ea0cdcb40385837cdd02d1ee5b5f7": {
    "text": "private String api_key;\n\n    double getBestSentimentScoreForTicker(JSONArray tickerArray, String stockSymbol) {\n        double bestScore = Double.NEGATIVE_INFINITY;\n        for (int i = 0; i < tickerArray.length(); i++) {\n            JSONObject tickerObj = tickerArray.getJSONObject(i);\n            if (tickerObj.getString(\"ticker\").equalsIgnoreCase(stockSymbol)) {\n                double relevance = Double.parseDouble(tickerObj.getString(\"relevance_score\"));\n                if (relevance >= 0.4) {\n                    double sentiment = tickerObj.getDouble(\"ticker_sentiment_score\");\n                    bestScore = Math.max(bestScore, sentiment);\n                }\n            }\n        }\n        return bestScore;\n    }\n    \n    // Add a method to get the relevance score for a ticker\n    double getRelevanceScoreForTicker(JSONArray tickerArray, String stockSymbol) {\n        for (int i = 0; i < tickerArray.length(); i++) {\n            JSONObject tickerObj = tickerArray.getJSONObject(i);\n            if (tickerObj.getString(\"ticker\").equalsIgnoreCase(stockSymbol)) {\n                return Double.parseDouble(tickerObj.getString(\"relevance_score\"));\n            }\n        }\n        return 0.0;\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/GenerateNewsService.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GenerateNewsService.java-4-89325482ce605ae3f36e8977d29bb49532cd7ee712a3322b743a7527464f72e4": {
    "text": "public String[][] generateNews(String stockSymbol) {\n\n        String[][] newsInfo = new String[4][5];\n\n        \n        // Alpha Vantage API URL\n        String apiCallURL = \"https://www.alphavantage.co/query?function=NEWS_SENTIMENT&tickers=\" + stockSymbol + \"&apikey=\" + api_key;\n                        \n        HttpClient client = HttpClient.newHttpClient();\n        HttpRequest request = HttpRequest.newBuilder()\n                .uri(URI.create(apiCallURL))\n                .header(\"User-Agent\", \"Mozilla/5.0\") // Avoid getting blocked\n                .build();\n\n        try {\n            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n            JSONObject jsonResponse = new JSONObject(response.body());\n\n            // Extract the \"news\" array\n            JSONArray newsArray = jsonResponse.getJSONArray(\"feed\");\n\n            // Arrays to store the articles and their scores\n            List<JSONObject> articles = new ArrayList<>();\n            List<Double> relevanceScores = new ArrayList<>();\n\n            // Loop through all news items and collect those relevant to the stock symbol\n            for (int i = 0; i < newsArray.length(); i++) {\n                JSONObject newsItem = newsArray.getJSONObject(i);\n                JSONArray tickerArray = newsItem.getJSONArray(\"ticker_sentiment\");\n                \n                // Get the relevance score for this ticker\n                double relevanceScore = getRelevanceScoreForTicker(tickerArray, stockSymbol);\n                \n                if (relevanceScore >= 0.4) {\n                    articles.add(newsItem);\n                    relevanceScores.add(relevanceScore);\n                }\n            }\n            \n            // Create a list of indices to sort\n            List<Integer> indices = new ArrayList<>();\n            for (int i = 0; i < articles.size(); i++) {\n                indices.add(i);\n            }\n            \n            // Sort indices by relevance score (descending)\n            Collections.sort(indices, (a, b) -> Double.compare(relevanceScores.get(b), relevanceScores.get(a)));\n            \n            // Take the top 5 or fewer if less are available\n            int count = Math.min(5, articles.size());\n            \n            // Populate the newsInfo array with the top articles\n            for (int i = 0; i < count; i++) {\n                int index = indices.get(i);\n                JSONObject article = articles.get(index);\n                double sentimentScore = getBestSentimentScoreForTicker(article.getJSONArray(\"ticker_sentiment\"), stockSymbol);\n                \n                newsInfo[0][i] = article.getString(\"title\");\n                newsInfo[1][i] = article.getString(\"source\");\n                newsInfo[2][i] = article.getString(\"url\");\n                newsInfo[3][i] = String.valueOf(sentimentScore);\n            }\n            \n            // Fill remaining slots with null if less than 5 items\n            for (int i = count; i < 5; i++) {\n                newsInfo[0][i] = null;\n                newsInfo[1][i] = null;\n                newsInfo[2][i] = null;\n                newsInfo[3][i] = null;\n            }\n            \n            // Print the results\n            for (int x = 0; x < count; x++) {\n                System.out.println(\"Title: \" + newsInfo[0][x]);\n                System.out.println(\"Source: \" + newsInfo[1][x]);\n                System.out.println(\"Link: \" + newsInfo[2][x]);\n                System.out.println(\"Sentiment Score: \" + newsInfo[3][x]);\n                System.out.println(\"Relevance Score: \" + relevanceScores.get(indices.get(x)));\n            }\n            \n            return newsInfo;\n        } catch (Exception e) {\n            e.printStackTrace();\n            throw new IllegalArgumentException(\"No API Response\");\n        }\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/service/GenerateNewsService.java",
    "chunk_id": 4
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-0-f006a95638d81b8a4cfe84635bda99998e43df03b538fd9c30ec80891c0bebc1": {
    "text": "package com.stockanalysis.service;\n\nimport java.sql.Statement;\nimport java.sql.PreparedStatement;\nimport java.sql.Connection;\nimport java.sql.ResultSet;\nimport java.util.ArrayList;",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-3-95b9bd4eb67fa0e27aaa30cd5c26e69bb4475b5042f035a9b0b2241385967777": {
    "text": "public Boolean checkUserExists(String google_id, Statement stmt) {\n        try {\n            Connection conn = stmt.getConnection();\n            // Use PreparedStatement to prevent SQL injection\n            PreparedStatement pstmt = conn.prepareStatement(\"SELECT * FROM users WHERE google_id = ?\");\n            pstmt.setString(1, google_id);\n            \n            // Execute the query and get a ResultSet\n            ResultSet rs = pstmt.executeQuery();\n\n            if (rs.next()) {\n                // true if user exists, else false\n                return true;\n            }\n            \n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return false;\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 3
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-4-075d71ea25b05447c28f057d26447925e16222c8e2c3488feb6ebac4904f9fe0": {
    "text": "public String addUserToDB(String google_id, String email, Statement stmt){\n        try {\n            Connection conn = stmt.getConnection();\n            // Use PreparedStatement to prevent SQL injection\n            PreparedStatement pstmt = conn.prepareStatement(\"INSERT INTO users (email, google_id) VALUES (?, ?) ON CONFLICT (email, google_id) DO NOTHING\");\n            pstmt.setString(1, email);\n            pstmt.setString(2, google_id);\n            \n            // Execute the update\n            pstmt.executeUpdate();\n            System.out.println(\"Added user: \"+google_id);\n            return \"Successfully added user: \"+email;\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to add user: \"+e;\n        }\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 4
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-5-3ee38e8c0dd9f179603c022d6d30966c79a6ccc890a8ad04736f3b23f2ea8dea": {
    "text": "public int getId(String google_id, Statement stmt) {\n        try {            \n            Connection conn = stmt.getConnection(); \n            // Use PreparedStatement to prevent SQL injection\n            PreparedStatement pstmt = conn.prepareStatement(\"SELECT id FROM users WHERE google_id = ?\");\n            pstmt.setString(1, google_id);\n            \n            // Execute the query and get a ResultSet\n            ResultSet rs = pstmt.executeQuery();\n\n            // Process the ResultSet\n            while (rs.next()) {\n                int id = rs.getInt(\"id\");  \n                System.out.println(\"ID:\" + id);\n                return id;\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 5
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-6-2c51fbfec09c37f96c4b128b56653596ad42d9766fd8c3195b6c89900d57bab1": {
    "text": "public ArrayList<String> getSymbols(String google_id, Statement stmt) {\n        ArrayList<String> symbols = new ArrayList<>();\n        try {\n            Connection conn = stmt.getConnection();\n            // Execute a query and get a ResultSet\n            System.out.println(\"Google ID: \"+google_id);\n            int user_id = getId(google_id, stmt);\n            PreparedStatement pstmt = conn.prepareStatement(\"SELECT symbol FROM stocks WHERE user_id = ?\");\n            pstmt.setInt(1, user_id);\n            ResultSet rs = pstmt.executeQuery();\n\n            // Process the ResultSet\n            while (rs.next()) {\n                String symbol = rs.getString(\"symbol\");\n                symbols.add(symbol);\n            }\n            System.out.println(\"Symbols: \"+symbols);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return symbols;\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-7-03266ad8843cf6b6e17320928d3bdacc631dcd8ba5edc456068bf8301031f5a0": {
    "text": "public String addSymbol(String google_id, Statement stmt,  String symbol) {\n        try {\n            Connection conn = stmt.getConnection();\n            // Use PreparedStatement to prevent SQL injection\n            PreparedStatement pstmt = conn.prepareStatement(\"INSERT INTO stocks (user_id, symbol) VALUES (?, ?) ON CONFLICT (user_id, symbol) DO NOTHING\");\n            int user_id = getId(google_id, stmt);\n            pstmt.setInt(1, user_id);\n            pstmt.setString(2, symbol);\n            \n            // Execute the update\n            pstmt.executeUpdate();\n            System.out.println(\"Added symbol: \"+symbol);\n            return \"Successfully added symbol: \"+symbol;\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to add symbol: \"+e;\n        }\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-8-d16266bc6b0fc4b0b394cac4759ba2be3304c1a95a37c259263877e0be4b6a1f": {
    "text": "public String deleteSymbol(String google_id, Statement stmt, String symbol) {\n        try {\n            Connection conn = stmt.getConnection();\n            // Use PreparedStatement to prevent SQL injection\n            PreparedStatement pstmt = conn.prepareStatement(\"DELETE FROM stocks WHERE user_id = ? AND symbol = ?\");\n            int user_id = getId(google_id, stmt);\n            pstmt.setInt(1, user_id);\n            pstmt.setString(2, symbol);\n            \n            // Execute the update\n            pstmt.executeUpdate();\n            System.out.println(\"Deleted symbol: \"+symbol);\n            return \"Successfully deleted symbol: \"+symbol;\n\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to delete symbol: \"+symbol;\n\n        }\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 8
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-9-2117d421d0f8829df8f65cdac3a01624af10f66a55ee3120da8827c8095e1767": {
    "text": "public String storeNewsKey(String symbol, String key, Statement stmt) {\n        try {\n            Connection conn = stmt.getConnection();\n            // Use PreparedStatement to prevent SQL injection\n            PreparedStatement pstmt = conn.prepareStatement(\"UPDATE stocks SET newskey = ? WHERE symbol = ?\");\n            pstmt.setString(1, key);\n\n            pstmt.setString(2, symbol);\n            \n            // Execute the update\n            pstmt.executeUpdate();\n            System.out.println(\"Stored news key: \"+key);\n            return key;\n\n        } catch (Exception e) {\n            e.printStackTrace();\n            return \"Failed to store news key: \"+e;\n        }\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 9
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/DBService.java-10-98537ebe2a0bbbd1dc1b2b2c6abdedf8654f02f1d03457796cae76ac17ca0f60": {
    "text": "public String getNewsKey(String symbol, Statement stmt)\n    {\n        try \n        {\n            Connection conn = stmt.getConnection();\n            System.out.println(\"GETTING NEWS KEY for: \"+symbol);\n            PreparedStatement pstmt = conn.prepareStatement(\"SELECT DISTINCT newskey FROM stocks WHERE symbol = ?\");\n            pstmt.setString(1, symbol);\n            ResultSet rs = pstmt.executeQuery();\n            while (rs.next()) \n            {\n                String key = rs.getString(\"newskey\");\n                System.out.println(\"News Key: \"+key);\n                return key;\n            }\n        }\n        catch (Exception e)\n        {\n            e.printStackTrace();\n            return \"Failed to get news key: \"+e;\n        }\n        return \"Failed to get news key\";\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/service/DBService.java",
    "chunk_id": 10
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java-0-58cd9ecac42bda4620d2ace06ece78b28a668a659c22964737b3c5ee45c98782": {
    "text": "package com.stockanalysis.service;\n\nimport org.springframework.beans.factory.annotation.Value;\n\nimport com.google.api.client.googleapis.auth.oauth2.GoogleIdToken;\nimport com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier;\nimport com.google.api.client.http.javanet.NetHttpTransport;\nimport com.google.api.client.json.gson.GsonFactory;\n\nimport org.springframework.stereotype.Service;\nimport java.io.IOException;\nimport java.util.Arrays;\n\n@Service",
    "path": "server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java-2-2e9084abc6ba46a1908350cf037e85e5b502b0fa4c53ae0f143050d459645c4b": {
    "text": "class GoogleAuthenticationService {\n\n    @Value(\"${GOOGLE_CLIENT_ID}\")",
    "path": "server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java",
    "chunk_id": 2
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java-6-cd39029cfb2f008ed9aacd8a9f35a24414b94622712ab77bfa1eebb7e090c78d": {
    "text": "public GoogleAuthenticationService() {\n\n        this.transport = new NetHttpTransport();\n        this.gsonFactory = GsonFactory.getDefaultInstance();\n    }",
    "path": "server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java",
    "chunk_id": 6
  },
  "/Users/kht/repos/StockSense/server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java-7-722035c8013b70e08c7c75c63bcd1ae278f38ed0e98f816c0dcc96f091604fac": {
    "text": "public GoogleIdToken.Payload authenticate(String IDToken) throws IOException {\n        System.out.println(\"Running: authenticate() function . . .\");\n\n        try {\n            GoogleIdTokenVerifier verifier = new GoogleIdTokenVerifier.Builder(transport, gsonFactory)\n                .setAudience(Arrays.asList(client_id))\n                .build();\n\n            GoogleIdToken idToken = verifier.verify(IDToken);\n            if (idToken != null) {\n                return idToken.getPayload();\n            } else {\n                throw new IOException(\"Invalid ID token.\");\n            }\n        } catch (Exception e) {\n            throw new IOException(\"Error verifying ID token: \" + e.getMessage());\n        }\n    }\n}",
    "path": "server/src/main/java/com/stockanalysis/service/GoogleAuthenticationService.java",
    "chunk_id": 7
  },
  "/Users/kht/repos/StockSense/server/src/test/java/com/stockanalysis/StockAnalysisApplicationTests.java-0-02cf0de5321af2aeb33cc969cdbf895bc00df2ab0aaf4b3d31162d0601ec7dfb": {
    "text": "package com.stockanalysis;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.boot.test.context.SpringBootTest;\n\n@SpringBootTest(classes = StockAnalysisApplication.class)",
    "path": "server/src/test/java/com/stockanalysis/StockAnalysisApplicationTests.java",
    "chunk_id": 0
  },
  "/Users/kht/repos/StockSense/server/src/test/java/com/stockanalysis/StockAnalysisApplicationTests.java-1-07f46cf19d484fa80ba981368033d53de92924cd3a90c27c1525c30eaa8ed971": {
    "text": "class StockAnalysisApplicationTests {\n\n    @Test\n    void contextLoads() {\n        // No test logic, just checks if the Spring application context loads successfully\n        // testing for components are done through endpoints\n    }\n}",
    "path": "server/src/test/java/com/stockanalysis/StockAnalysisApplicationTests.java",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/layout.js-0-177a953929d6c6b14095a09cdedb4878c52dc7fa1803e67debae237ff3beff78": {
    "text": "import { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";",
    "path": "app/layout.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/layout.js-1-e94e4fa0c0fb5b3d650557fa5534a996a30d8d5f168e344cd796c788d883d707": {
    "text": "const geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});",
    "path": "app/layout.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/layout.js-2-c075fd77a4b08dae986ca16c62cc755328009e51227d87a63a11f6bd0ee748fe": {
    "text": "const geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport",
    "path": "app/layout.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/portfolio/app/layout.js-3-c891f2e386497b87f9409073da058b8a9aa81241b8b9141585a7d0528fcb9caf": {
    "text": "const metadata = {\n  title: \"kyle ton\",\n  icons: {\n    icon: \"/favicon.ico\",\n  },\n  description: \"Generated by create next app\",\n};\n\nexport default",
    "path": "app/layout.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/layout.js-4-51866f2d967a764615a81285cebbf8c15e65fcb844d5cd61382099c6aaef7fd0": {
    "text": "function RootLayout({ children }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </head>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        {children}\n      </body>\n    </html>\n  );\n}",
    "path": "app/layout.js",
    "chunk_id": 4
  },
  "/Users/kht/repos/portfolio/app/page.js-0-47f26149853406d6e58d894a28606505fef484dc3c986422bef905f86b374134": {
    "text": "import NameAndMenu from './components/main/NameAndMenu';\nimport Intro from './components/main/Intro';\n import AboutMe from './components/main/AboutMe';\nimport Education from './components/main/Education';\nimport Experience from './components/main/Experience';\nimport Projects from './components/main/Projects';\nimport Skills from './components/main/Skills';\nimport Socials from './components/main/Socials';\nimport Footer from './components/main/Footer';\n\n\nexport default",
    "path": "app/page.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/page.js-1-0aeb3011424a8a4dabad8db01570f50ae42c6c60981840d4f8ea7d087041908e": {
    "text": "function Home() {\n  return (\n    <div id='all-component-wrapper' className=\"px-4 lg:px-0 min-h-screen bg-white\">\n      <NameAndMenu />\n          <Intro />\n          <AboutMe />\n          <Education />\n          <Experience />\n          <Projects />\n          <Skills />\n          <Socials />\n      <Footer />\n    </div>\n  );\n}",
    "path": "app/page.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/motion/ScrollMotionWrapper.js-0-ff00fef2237586928405ed5a65ae9dba9de82ab5d03af9f407ad120971576d3e": {
    "text": "'use client' \nimport { motion } from \"framer-motion\";",
    "path": "app/motion/ScrollMotionWrapper.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/motion/ScrollMotionWrapper.js-1-513f5125fb530adb4b7cdadc51f4af2e7bfd13ebf38cd0a8a11a2742e8f02c54": {
    "text": "const ScrollMotionWrapper = ( { contents } ) => {\n\n  return (\n    <motion.div\n    initial={{ opacity: 0, y: 100 }}\n    whileInView={{ opacity: 1, y: 0 }}\n    transition={{ duration: 1.25 }}\n    viewport={{ once:true }}\n    >\n      {contents}\n    </motion.div>\n  );\n};\n\nexport default ScrollMotionWrapper;",
    "path": "app/motion/ScrollMotionWrapper.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-0-7e8ce8e4f6defd3360907274324554d81f8e9cdfdbb4349db8bc247a6db9d75c": {
    "text": "'use client';\nimport { useState, useEffect } from 'react';\n\nimport { ArrowDownToLine } from 'lucide-react';\nimport { Button } from '@/components/ui/resumebutton';\nimport { ResumeTerminal } from './ResumeTerminal';\n\n\n// Main component that combines the anchor button and modal\nexport default",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-3-abf5aadb458ea28f0ef08a6a4e78dacc92045faf899fb4a83837f2ec5e271226": {
    "text": "const [downloadTriggered, setDownloadTriggered] = useState(false);",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-4-d1e78290c49e0e5c9cb1492d63cc675327f9d430be86479cc5966be58ffb505c": {
    "text": "const openModal = () => {\n    setIsOpen(true);\n    setDownloadTriggered(false);\n  };",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 4
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-5-6358e8b69d91df5197a1146bba004a13c0f0028c22f50e836c98924be304a3bb": {
    "text": "const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  // Detect if user is on iOS (Safari is weird with downloads)",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 5
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-6-8b1518e42af812c98a9914db8cb818f92a0cd8d2ceb710e906f962100119996e": {
    "text": "const isIOS = () => {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n  };\n\n  // Handle the resume download at the right moment\n  useEffect(() => {",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 6
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-8-fde50e1d87fdab2307a0a66784a8423c4c4ccdbf8068b1800e1cd61f417eb293": {
    "text": "let closeModalTimer;\n\n    if (isOpen && !downloadTriggered) {\n      // Set timer to download just before the final success message\n      // This will happen around the time \"Uploaded 1 file\" appears\n      downloadTimer = setTimeout(() => {\n        downloadResume();\n        setDownloadTriggered(true);\n        closeModalTimer = setTimeout(() => {\n            closeModal();\n          }, 1500); // Wait 1.5 seconds after download before closing\n      }, 8500); // Download at 5300ms, before the download message\n    }\n    \n    return () => {\n      if (downloadTimer) clearTimeout(downloadTimer);\n    };\n  }, [isOpen, downloadTriggered]);",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 8
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-10-08f6879ec1d93b80b10b5c34d37ec353519b7e8c1f3af2a44566d7164e5b8d17": {
    "text": "const resumePath = '/resume/Resume_KyleTon.pdf';\n    if (isIOS()) {\n      // For iOS devices, open in a new tab\n      window.open(resumePath, '_blank');\n      console.log('Resume opened in new tab for iOS!');\n    } else {\n      // For other devices, use the download method",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 10
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeDownloadButton.js-11-4de87b8ef3dc3d6589cc559f7f44dbe5f9fdf9faf374e72dbad5affa3950c23f": {
    "text": "const link = document.createElement('a');\n      link.href = resumePath;\n      link.download = 'Resume_KyleTon.pdf';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      console.log('Resume download triggered!');\n    }\n    \n    console.log('Resume download triggered!');\n  };\n\n    return (\n        <div className=\"font-sans\">\n            <Button onClick={openModal} className=\"bg-white text-black font-semibold py-2 px-4 lg:py-2 lg:px-5 border-2 border-black rounded-md \n                shadow-[3px_3px_0px_0px_black] hover:shadow-[1px_1px_0px_0px_white] hover:translate-x-[2px] \n                hover:translate-y-[2px] mt-6 hover:scale-[1.02] hover:bg-[#E9D7FF] transition-all\">\n                    <ArrowDownToLine className='' />\n                        my resume\n            </Button>\n          \n          {isOpen && (\n            <div className=\"w-full fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center align-center z-50\">\n                <div className=\"p-10\">\n                  <ResumeTerminal />\n                </div>\n            </div>\n          )}\n        </div>\n      );\n    }",
    "path": "app/components/models/ResumeDownloadButton.js",
    "chunk_id": 11
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-0-69cb1c6ec5ddb24579ec7c251ec0df4215607dbea303d013946b52eef1dc3975": {
    "text": "import { useState } from \"react\";\nimport emailjs from \"@emailjs/browser\";\nimport dotenv from \"dotenv\";\n\nexport default",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-2-ff0c5b7fd4bda37983768bb8d85ab54c5f4ac1052e29a34807d5ddb9bfbeb817": {
    "text": "const serviceID = process.env.NEXT_PUBLIC_EMAILJS_SERVICE_ID;",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-3-8c8d02363e59ca06c09c6136a59712484c1bd747b29d9075fcbb8463be93dd55": {
    "text": "const templateID = process.env.NEXT_PUBLIC_EMAILJS_TEMPLATE_ID;",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-4-44f99bdf2dba087364e7009b8302de272abe5c2b290c4eb4e9214234c938c4da": {
    "text": "const apiKey = process.env.NEXT_PUBLIC_EMAILJS_API_KEY;",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 4
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-6-7bac6b1387a2d72b1c3928acc0b4b66f0df98115083033cfe0210e9f52272de7": {
    "text": "const handleSubmit = async (e) => {\n        e.preventDefault();",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 6
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-7-30b875143c299929acae4003fefde80e24ea04923d37d862ae2d190e54fc4170": {
    "text": "const title = bookTitle.trim();\n        if (!bookTitle) {\n            alert(\"Please enter a book title.\");\n            return;\n        }\n        setBookTitle(\"\");",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 7
  },
  "/Users/kht/repos/portfolio/app/components/models/BookRecForm.js-8-01d682ba1488c6a53edd28076dc9326f0d5c2dad668c17b8128ea8d2c58b7c6d": {
    "text": "const templateParams = {\n        book_title: title,\n        };\n\n        try {\n        await emailjs.send(\n            serviceID,     // emailjs service id\n            templateID,    // emailjs template id\n            templateParams,\n            apiKey // my emailjs api key\n        );\n        alert(\"Thanks for the recommendation!\");\n        } catch (error) {\n        console.error(\"Email send failed:\", error);\n        }\n    };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <input\n        type=\"text\"\n        placeholder=\"book title\"\n        value={bookTitle}\n        onChange={(e) => setBookTitle(e.target.value)}\n        className=\"text-xs lg:text-sm border-b-2 px-4 py-2 w-1/2 focus:border-zinc-400 focus:outline-none\"\n        required\n      />\n      <button type=\"submit\" className=\"ml-5 bg-zinc-400 text-xs lg:text-sm text-white px-3 py-1.5 rounded\">\n        submit\n      </button>\n    </form>\n  );\n}",
    "path": "app/components/models/BookRecForm.js",
    "chunk_id": 8
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeTerminal.js-0-cd87f17a6cddbce2ed3e9c373122fcda4d97cebce705a92a26821054763971af": {
    "text": "import { AnimatedSpan, Terminal, TypingAnimation } from '@/components/magicui/terminal';\n\n  export",
    "path": "app/components/models/ResumeTerminal.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/ResumeTerminal.js-1-d68870bbe4cc4fc8f985fa76ed77a3628b5535bec4605cc8eb2db5c7aa5a22e3": {
    "text": "function ResumeTerminal() {\n    return (\n      <Terminal className='w-full h-full lg:w-[600px] h-[320px]'>\n        <TypingAnimation className='text-sm lg:text-base mt-2'>&gt; brew install resume</TypingAnimation>\n  \n        <AnimatedSpan delay={1750} className=\"text-sm lg:text-base ml-2 text-green-500\">\n          <span>\u2714 Connecting to server.</span>\n        </AnimatedSpan>\n\n        <AnimatedSpan delay={2500} className=\"text-sm lg:text-base ml-2 text-green-500\">\n          <span>\u2714 Sending download request.</span>\n        </AnimatedSpan>\n\n        <AnimatedSpan delay={3300} className=\"text-sm lg:text-base ml-2 text-green-500\">\n          <span>\u2714 Retrieving resume.</span>\n        </AnimatedSpan>\n  \n        <AnimatedSpan delay={4100} className=\"text-sm lg:text-base ml-2 text-green-500\">\n          <span>\u2714 Formatting for user download.</span>\n        </AnimatedSpan>\n\n        <AnimatedSpan delay={4900} className=\"text-sm lg:text-base ml-2 text-blue-500\">\n          <span>\u2139 Uploading 1 file:</span>\n          <span className=\"pl-2\">- Resume.pdf</span>\n        </AnimatedSpan>\n  \n        <TypingAnimation delay={6000} className=\"text-sm lg:text-base ml-2 mb-4 text-muted-foreground\">\n          Success! Resume downloaded.\n        </TypingAnimation>\n      </Terminal>\n    );\n  }",
    "path": "app/components/models/ResumeTerminal.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/models/pictureCarousel.js-0-f6312d4252658a217349fa9570f9ad18c3eec1bdafafb0f95f7728f009c5152f": {
    "text": "import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from '@/components/ui/carousel';\nimport Image from 'next/image';\n\nexport default",
    "path": "app/components/models/pictureCarousel.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/pictureCarousel.js-1-c3f06813d6543cc0ed67748ccff933d0bee1419eb06cd6bdf5a82504d559540d": {
    "text": "function PictureCarousel({ images, picwidth }) {\n\n    return (\n        <div className='w-full h-auto flex justify-center items-center'>\n            <Carousel className=\"w-[75%] lg:w-[27.5%] flex justify-center items-center\">\n            <CarouselContent>\n                {images.map((child, index) => (\n                    <CarouselItem key={index} className=\"basis-full\">\n                        <Image \n                            src={child} \n                            alt={\"image here\"}\n                            className=\"w-full h-full object-cover rounded-lg border-2 border-zinc-500\"\n                            width=\"250\"\n                            height=\"300\"\n                        />\n                    </CarouselItem>\n                ))}\n            </CarouselContent>\n            <CarouselPrevious className='bg-zinc-300 text-gray' />\n            <CarouselNext className='bg-zinc-300 text-gray'/>\n            </Carousel>\n        </div>\n    );\n}",
    "path": "app/components/models/pictureCarousel.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/models/AboutMeTabs.js-0-4d82e409210187293075c233050f29cb6f3a59f29683af140fbc6db7e8f719f8": {
    "text": "import { Button } from \"@/components/ui/button\"\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\"\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\"\nimport PictureCarousel from \"./pictureCarousel\";\nimport { useState } from \"react\";\nimport BookRecForm from \"./BookRecForm\";\nimport Image from \"next/image\";\n\nexport",
    "path": "app/components/models/AboutMeTabs.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/AboutMeTabs.js-1-15a9f37ad5abfa8887d64e430c8c2a8c453185e20952677cb88e6df807a6cd10": {
    "text": "function AboutTabs() {    \n\n    // arrays to hold file names for pics",
    "path": "app/components/models/AboutMeTabs.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/models/AboutMeTabs.js-2-a0874d379deae0e6e1eb3a2af67a14c871475a85f643616ace94428c53c64d9b": {
    "text": "const personalContent = [\n        \"/images/aboutme/personal/burlington.jpeg\",\n        \"/images/aboutme/personal/christmas.jpeg\",\n        \"/images/aboutme/personal/famjapan.jpeg\",\n        \"/images/aboutme/personal/gentlemonster.jpeg\",\n        \"/images/aboutme/personal/kbbq.jpeg\",\n        \"/images/aboutme/personal/nemo.jpeg\",\n        \"/images/aboutme/personal/pizza.jpeg\",\n        \"/images/aboutme/personal/seaside.jpeg\",\n        \"/images/aboutme/personal/thesource.jpeg\",\n        \"/images/aboutme/personal/graduation.jpeg\",\n        \"/images/aboutme/personal/venicebeach.jpeg\",\n        \"/images/aboutme/personal/jaydenhironori.jpeg\",\n    ];",
    "path": "app/components/models/AboutMeTabs.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/portfolio/app/components/models/AboutMeTabs.js-3-5ffd2a76225cf0da64f4147b808f61e228804e6986f611f8a8a3d12ad8d97aad": {
    "text": "const foodContent = [\n        \"/images/aboutme/food/brewstory.jpeg\",\n        \"/images/aboutme/food/caffeincoffee.jpeg\",\n        \"/images/aboutme/food/calixtos.jpeg\",\n        \"/images/aboutme/food/cortado.jpeg\",\n        \"/images/aboutme/food/kei.jpeg\",\n        \"/images/aboutme/food/nepcafe.jpeg\",\n        \"/images/aboutme/food/nookcoffeebar.jpeg\",\n        \"/images/aboutme/food/northitalia.jpeg\",\n        \"/images/aboutme/food/nostimobingsoo.jpeg\",\n        \"/images/aboutme/food/stereoscope.jpeg\"\n      ];",
    "path": "app/components/models/AboutMeTabs.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/components/models/AboutMeTabs.js-4-0e45c069c7186be5ba0f4eb1e8b8e8588c03d94c105965efa8f0966e9b42201c": {
    "text": "const bookContent = [\n        \"/images/aboutme/books/bookshelf.jpeg\",  \n    ];\n\n  return (\n    <Tabs defaultValue=\"me\" className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-3\">\n        <TabsTrigger value=\"me\">fam + friends</TabsTrigger>\n        <TabsTrigger value=\"food\">good eats</TabsTrigger>\n        <TabsTrigger value=\"books\">books</TabsTrigger>\n\n      </TabsList>\n      <TabsContent value=\"me\">\n        <Card>\n          <CardHeader>\n            <CardTitle className='text-xl'>family and friends</CardTitle>\n            <CardDescription className='text-xs mx-auto lg:w-[95%]'>\n              i love hanging with family and friends, and exploring new places.\n              ive started playing pickleball and have been playing throughout college. \n              lmk if youre down to hit sometime!\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-2 justify-center items-center\">\n                <PictureCarousel images={personalContent} />\n          </CardContent>\n          <CardFooter>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n      <TabsContent value=\"food\">\n        <Card>\n          <CardHeader>\n            <CardTitle className='text-xl'>good eats</CardTitle>\n            <CardDescription className='text-xs mx-auto lg:w-[95%]'>\n              i absolutely love good eats, and cafe hopping while studying/working on stuff!\n              below are some of my recents:\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n          <PictureCarousel images={foodContent} />\n\n          </CardContent>\n          <CardFooter>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n      <TabsContent value=\"books\">\n        <Card>\n          <CardHeader>\n            <CardTitle className='text-xl'>my current bookshelf!</CardTitle>\n            <CardDescription className='text-xs mx-auto lg:w-[95%]'>\n                i have been reading a lot of books recently, mainly productivity, self-improvement,\n                and emotionally introspective books. some favorites are atomic habits,\n                dont believe everything you think, and the obstacle is the way.\n                feel free to drop any book recs below!\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-8\">\n            <div className=\"flex flex-col items-center text-center space-y-2 w-full\">\n                    <Image \n                        src={bookContent[0]}\n                        alt={\"image here\"}\n                        className=\"w-[75%] lg:w-[25%] h-auto object-cover rounded-lg border-2 border-zinc-500\"\n                        width=\"250\"\n                        height=\"300\"\n                    />\n                <BookRecForm />\n            </div>\n          </CardContent>\n          <CardFooter>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n    </Tabs>\n  )\n}",
    "path": "app/components/models/AboutMeTabs.js",
    "chunk_id": 4
  },
  "/Users/kht/repos/portfolio/app/components/models/ProjectEntry.js-0-be231ea54361fda8a5c71fe09462a4074954b33b50667e89c3e51944585a89e6": {
    "text": "import ScrollMotionWrapper from \"@/app/motion/ScrollMotionWrapper\";",
    "path": "app/components/models/ProjectEntry.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/ProjectEntry.js-1-b67b600d26354b80c4f4447df5edb848f396092e51d2338b77d7025ec79bf73d": {
    "text": "const ProjectEntry = ({ content }) => {\n\n    return (\n        <div id='project-container'>\n            <ScrollMotionWrapper\n                contents={\n                    <div id=\"individual-entry\" className=\"mb-10 shadow-md shadow-gray/20 ring-1 ring-black/5 p-6 bg-white rounded-lg p-4\">\n                        <div id=\"div-to-hold-headers\">\n                        <h4 className=\"font-medium text-[19.5px]\">{content.title}</h4>\n                        <div className=\"text-sm flex flex-col lg:flex-row lg:justify-between\">\n                            <p className=\"font-extralight mb-1\">{content.subheading}</p>\n                            <p className=\"mr-2 lg:text-right text-xs\">{content.dates}</p>\n                        </div>\n                        </div>\n                        <div \n                            id=\"job-summary\"\n                            className=\"mt-3 ml-2 lg:w-4/5 font-light text-sm whitespace-pre-line\">\n                                {content.description.map((item, index) => (\n                                    <p key={index} className=\"mb-2\">\n                                    {item}\n                                    </p>\n                                    ))\n                                }\n                        </div>\n                        <div className='mr-2 mt-4 lg:mt-2 font-light text-[17px] text-zinc-700 flex flex-col lg:flex-row justify-end'>\n                            {content.video && (\n                                <a className=\"lg:ml-4 ml-2 mb-3 lg:mb-1\" target='_blank' rel='external noopener noreferrer' href={content.video}>\n                                    <button className=\"inline-block px-4 py-1.5 text-sm font-medium text-gray-800 bg-gray-100 border rounded-md \n                                    shadow-md ease-out hover:bg-gray-200\">\n                                        video demo\n                                    </button>\n                                </a>\n                                )\n                            }\n\n                            {content.deployment && (\n                                <a className=\"lg:ml-4 ml-2 mb-3 lg:mb-1\" target='_blank' rel='external noopener noreferrer' href={content.deployment}>\n                                <button className=\"inline-block px-4 py-1.5 text-sm font-medium text-gray-800 bg-gray-100 border rounded-md \n                                    shadow-md ease-out hover:bg-gray-200\">\n                                        live deployment\n                                    </button>\n                                </a>\n                                )\n                            }\n\n                            {content.github && (\n                                <a className=\"lg:ml-4 ml-2 mb-3 lg:mb-1\" target='_blank' rel='external noopener noreferrer' href={content.github}>\n                                <button className=\"inline-block px-4 py-1.5 text-sm font-medium text-gray-800 bg-gray-100 border rounded-md \n                                    shadow-md ease-out hover:bg-gray-200\">\n                                        github\n                                    </button>\n                                </a>\n                                )\n                            }\n                        </div>\n                    </div>\n                }\n            />\n        </div>\n    );\n}\nexport default ProjectEntry;",
    "path": "app/components/models/ProjectEntry.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/models/Entry.js-0-5b08a5353ffbf03b7dbd8adb57c08efb0e69bde9887911251f9cd88c3f269109": {
    "text": "import ScrollMotionWrapper from \"../../motion/ScrollMotionWrapper\";",
    "path": "app/components/models/Entry.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/models/Entry.js-1-a4fed2f14c89620ea18fa107b172c7894ce738c5adb3bfd87aa6ee703e2a0802": {
    "text": "const Entry = ({ content }) => {\n  return (\n    <div id='entry-wrapper-container'>\n      <ScrollMotionWrapper\n        contents={\n          <div id=\"individual-entry\">\n            <div id=\"div-to-hold-headers\">\n              <h4 className=\"font-medium text-[19px]\">{content.title}</h4>\n              <div className=\"text-sm grid grid-cols-1 lg:grid-cols-2\">\n                <p className=\"lg:mb-0 mb-1\">{content.subheading}</p>\n                <p className=\"lg:text-right text-xs\">{content.dates}</p>\n              </div>\n            </div>\n            <div \n              id=\"job-summary\" \n              className=\"mt-3 ml-2 lg:w-4/5 font-light text-sm whitespace-pre-line\"\n            >\n              {content.description.map((item, index) => (\n                    <p key={index} className=\"mb-1.5\">\n                      {item}\n                    </p>\n                  ))\n                \n              }\n\n            </div>\n          </div>\n        }\n      />\n    </div>\n  );\n};\n\nexport default Entry;",
    "path": "app/components/models/Entry.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/Education.js-0-eb298b92aaf441292ade48ebf5ecba978efa2e4579298f3203352d854be45541": {
    "text": "import ScrollMotionWrapper from \"../../motion/ScrollMotionWrapper\";\nimport EduExpEntry from \"../models/Entry\";",
    "path": "app/components/main/Education.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/Education.js-1-a4047d10d73420532e3deb65740cb8908a5f10acd63481ccaf7597c4ddbbeca6": {
    "text": "const Education = () => {\n\n    return (\n      <main id='education' className=\"mb-8 px-4 sm:px-8 lg:px-16 py-8\">\n      <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-16\">\n        <div className='lg:min-w-full'>\n          <ScrollMotionWrapper \n            contents={\n              <h1 className=\"font-medium text-[32px] lg:mb-6 mb-4\">education</h1>\n            }>\n          </ScrollMotionWrapper>\n          \n          <div id='all-education-wrapper' className=\"space-y-8\">\n          <EduExpEntry\n              content={{\n                title: \"bachelor's in computer science, minoring in data science [waiting for acceptances]\",\n                subheading: 'unknown - ca',\n                dates: 'aug 2025 - jun 2027',\n                description: [\"relevant coursework: to be determined.\"]\n              }}>\n            </EduExpEntry>\n            <EduExpEntry\n              content={{\n                title: \"transfers' in computer science [transferred to 4-year university]\",\n                subheading: 'orange coast college - costa mesa, ca',\n                dates: 'jun 2023 - aug 2025',\n                description: [\"relevant coursework: object oriented programming, computer architecture and assembly, discrete mathematics, data structures and algorithms, linear algebra, single and multivariable calculus, differential equations.\"]\n              }}>\n            </EduExpEntry>\n            <EduExpEntry\n              content={{\n                title: \"high school diploma\",\n                subheading: 'la quinta high school - westminster, ca',\n                dates: 'sep 2019 - jun 2023',\n                description: [\"gpa: 3.93/4.35 | rank: 36/550\", \"awarded seal of biliteracy in spanish.\"]\n              }}>\n            </EduExpEntry>\n                \n          </div>\n        </div>\n      </div>\n    </main>\n        \n    );\n\n}\nexport default Education;",
    "path": "app/components/main/Education.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/Experience.js-0-14183c5433f0efc676e7129c2c3f3394364f72146b00c373e7920aafd3b0d330": {
    "text": "import Entry from \"../models/Entry\";\nimport ScrollMotionWrapper from \"../../motion/ScrollMotionWrapper\";",
    "path": "app/components/main/Experience.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/Experience.js-1-e7a834d40a10ef1cddfe08d25015c2931c87073aeb2297ca62d4cdb972a20f66": {
    "text": "const Experience = () => {\n  return (\n    <main id='experience' className=\"mb-8 px-4 sm:px-8 lg:px-16 py-8\">\n      <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-16\">\n        <div className='lg:min-w-full'>\n          <ScrollMotionWrapper \n            contents={\n              <h1 className=\"font-medium text-[32px] lg:mb-6 mb-4\">experience</h1>\n            }>\n          </ScrollMotionWrapper>\n          \n          <div id='all-experience-wrapper' className=\"space-y-12\">\n\n          <Entry\n              content={{\n                title: 'ai engineering intern',\n                subheading: 'product manager accelerator - remote',\n                dates: 'oct 2024 - dec 2024',\n                description: [\"developed a full-stack application to enhance resumes, using an llm pipeline to analyze and increase industry-specific keywords and relevance.\",\n                  \"also implemented a mongodb database to store and manage resumes, storing over 100 resumes and allowing for efficient retrieval and analysis.\"\n                ]\n              }}\n            />\n              \n            <Entry\n                content={{\n                  title: 'software engineering intern',\n                  subheading: 'trace - garden grove, ca',\n                  dates: 'aug 2024 - oct 2024',\n                  description: [\"created automated scripts for camera testing, for version control and calibration, increasing efficiency and accuracy of quality assurance and documentation.\",\n                    \"using baud rates of camera modules, i diagnosed issues in the pre-release module software updates, leading to a more efficient and reliable update-integration process.\"\n                  ]\n                }}\n            />\n\n            <Entry\n              content={{\n                title: 'ai trainer - language models',\n                subheading: 'dataannotation - remote [part-time]',\n                dates: 'jun 2024 - dec 2024',\n                description: [\"evaluated and improved the accuracy of language model responses in various subjects, including various programming languages, validating performance and consistency.\"]\n              }}\n            />\n\n            <Entry\n              content={{\n                title: 'ai software engineering fellow',\n                subheading: 'headstarter ai - remote',\n                dates: 'jul 2024 - sep 2024',\n                description: [\"worked in a group setting, creating full-stack applications with generative ai applications, learning and using various apis and technologies.\",\n                  \"also participated in a hackathon, creating a natural language processing application, parsing and analyzing data from a csv file and classifying it based on sentiment, entering it into a postgresql database.\"\n                ]\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Experience;",
    "path": "app/components/main/Experience.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/AboutMe.js-0-4de1741407a02c4ce27c3c3dbd00ccf1d6894f64d4306aa43a5eff903125bba4": {
    "text": "'use client';\nimport ScrollMotionWrapper from \"@/app/motion/ScrollMotionWrapper\";\nimport { useState } from \"react\";\nimport BookRecForm from \"../models/BookRecForm\";\nimport { AboutTabs } from \"../models/AboutMeTabs\";\n\nimport  PictureCarousel  from \"../models/pictureCarousel\";",
    "path": "app/components/main/AboutMe.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/AboutMe.js-1-d2f7b0e9d70f73bcc32fc0b346d223515c204b6c1004a8ce10133d6b455e978c": {
    "text": "const AboutMe = () => {\n\n    // arrays to hold file names for pics",
    "path": "app/components/main/AboutMe.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/AboutMe.js-2-7496621add3feb4b596730afa42285a1ea5131ab7d02b1ddfb491ac934ecab27": {
    "text": "const personalContent = [\n        \"/images/aboutme/personal/burlington.jpeg\",\n        \"/images/aboutme/personal/christmas.jpeg\",\n        \"/images/aboutme/personal/famjapan.jpeg\",\n        \"/images/aboutme/personal/gentlemonster.jpeg\",\n        \"/images/aboutme/personal/kbbq.jpeg\",\n        \"/images/aboutme/personal/nemo.jpeg\",\n        \"/images/aboutme/personal/pizza.jpeg\",\n        \"/images/aboutme/personal/seaside.jpeg\",\n        \"/images/aboutme/personal/thesource.jpeg\",\n        \"/images/aboutme/personal/venicebeach.jpeg\",\n    ];",
    "path": "app/components/main/AboutMe.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/portfolio/app/components/main/AboutMe.js-3-b7a8f661a74db46921156075f1fc4f4ba365d329d5b3f05761a6e90af1f0e004": {
    "text": "const foodContent = [\n        \"/images/aboutme/food/IMG_1038.JPG\",\n    ];",
    "path": "app/components/main/AboutMe.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/components/main/AboutMe.js-4-c40704dd99e5936f23c5a0d9362e929ece8d36f5fe240548022dedf1d89bbaac": {
    "text": "const bookContent = [\n        \"/images/aboutme/books/bookshelf.jpeg\",  \n    ];",
    "path": "app/components/main/AboutMe.js",
    "chunk_id": 4
  },
  "/Users/kht/repos/portfolio/app/components/main/AboutMe.js-5-c3fa3ce23867c8d922d1326f66325abb7cebd01a26c7ed4b44cec1e64b2e7633": {
    "text": "const [currentBookContent, setCurrentBookContent] = useState(0);\n\n    return (\n        <main id='about-me' className=\"mb-8 px-4 lg:px-16 py-8\">\n            <div className=\"jflex flex-col lg:flex-row gap-8 lg:gap-16\">\n                <div className='lg:min-w-full'>\n                    <ScrollMotionWrapper \n                        contents={\n                            <h1 className=\"font-medium text-[32px] lg:mb-6 mb-4\">about me</h1>\n                        }>\n                    </ScrollMotionWrapper>\n                    <div className='mt-4 lg:mt-8 w-full flex flex-col lg:flex-row mb-12 items-center justify-center'>\n                        <ScrollMotionWrapper\n                            contents={\n                            <div className=\"flex flex-col items-center text-center space-y-2 w-full\">\n                                <AboutTabs />\n\n                            </div>\n                            }\n                        />\n                    </div>   \n                </div>\n            </div>\n        </main>\n    );\n}\nexport default AboutMe;",
    "path": "app/components/main/AboutMe.js",
    "chunk_id": 5
  },
  "/Users/kht/repos/portfolio/app/components/main/Skills.js-0-5b08a5353ffbf03b7dbd8adb57c08efb0e69bde9887911251f9cd88c3f269109": {
    "text": "import ScrollMotionWrapper from \"../../motion/ScrollMotionWrapper\";",
    "path": "app/components/main/Skills.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/Skills.js-1-248ea2c8371b59b974f93028ac3542cd4c10da20167e2d1f83dc08d7abb87097": {
    "text": "const Skills = () => {\n\n    return (\n        <main id='skills' className=\"mb-8 px-4 lg:px-16 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-16\">\n        <div className='lg:min-w-full'>\n          <ScrollMotionWrapper \n            contents={\n              <h1 className=\"font-medium text-[30px] mb-2\">skills</h1>\n            }>\n          </ScrollMotionWrapper>\n              \n              <ScrollMotionWrapper \n                contents={\n                  <div id='skillset' className=\"ml-3 font-light text-[15px] space-y-1\">\n                    <p><b className='font-semibold'>languages:</b> html/css, javascript, python, java, c++, sql</p>\n                    <p><b className='font-semibold'>frameworks:</b> rest api, react, express, fastapi, next.js, flask, spring boot</p>\n                    <p><b className='font-semibold'>tools/applications:</b> git, firebase, mongodb, postgresql, aws, vercel, docker, redis, postman, visual studio</p>\n                    <p><b className='font-semibold'>machine learning:</b> numpy, pandas, matplotlib, seaborn, scikit-learn</p>\n                  </div>\n                }>\n              </ScrollMotionWrapper>         \n          </div>\n        </div>\n      </main>\n    );\n}\n\nexport default Skills;",
    "path": "app/components/main/Skills.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/Projects.js-0-73c2076a11ab3b135490a24e653888eb8fcfb9c74aba37607218ab21c2f358a8": {
    "text": "import ScrollMotionWrapper from \"../../motion/ScrollMotionWrapper\";\nimport ProjectEntry from \"../models/ProjectEntry\";",
    "path": "app/components/main/Projects.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/Projects.js-1-1dcc538f0613188d3db3884d70d9fcc1af89541a7d206eb7f6a32af83a23bdd8": {
    "text": "const Projects = () => {\n\n    return (\n\n        <main id='projects' className=\"mb-8 px-4 lg:px-16 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-16\">\n        <div className='lg:min-w-full'>\n          <ScrollMotionWrapper \n            contents={\n              <h1 className=\"font-medium text-[32px] lg:mb-6 mb-4\">projects</h1>\n            }>\n          </ScrollMotionWrapper>\n          <div id='all-projects-wrapper'>\n            <div className=\"flex flex-col gap-8\">\n              <ProjectEntry\n                  content={{\n                    title: \"matchpointai\",\n                    subheading: 'python, react, tailwind css, scikit-learn, pandas, numpy, jupyter notebook',\n                    description: [\n                      \"project is still under construction\",\n                      \"a full stack machine learning application that uses xgboost to predict the likelihood of a tennis match outcome\",\n                      \"inspired by me playing tennis and wanting to know whether prime federer would beat alcaraz and/or sinner\",\n                    ],\n                    dates: 'may 2025 - present',\n                    deployment: \"\",\n                    github: \"https://github.com/kylehton/MatchPointAI\",\n                    video: \"\"\n                  }}\n              />\n              </div>\n              <ProjectEntry\n                  content={{\n                    title: \"git-lint\",\n                    subheading: 'python, fastapi, github webhooks, openai api (gpt-4o-mini + text-embedding-3-small), pinecone db, docker, aws ec2',\n                    description: [\n                      \"a little play on eslint, but for github code diffs + syntax review + security vulnerability analysis\",\n                      \"an automated fastapi service that reviews github pull requests and analyzes the code for security vulnerabilities, performance issues, and code quality, using gpt-4o-mini\",\n                      \"implemented rag with pinecone db and openai text-embedding-3-small, vectorizing codebase of my repos to provide context to model for better code reviews\",\n                    ],\n                    dates: 'may 2025',\n                    deployment: \"\",\n                    github: \"https://github.com/kylehton/Git-Lint\",\n                    video: \"\"\n                  }}\n              />\n              <ProjectEntry\n                  content={{\n                    title: \"stocksense\",\n                    subheading: 'next.js, spring boot, postgresql, tailwind css, shadcn, google oauth2.0, aws s3, docker, redis, vercel, railway.app',\n                    description: [\n                      \"a full stack application that displays stock information and stock data visualization. it gathers information based on user input and displays stock numerical data and a chart visualization. using sentiment analysis, it gathers recent related news and articles and analyzes them for a positive/negative rating.\", \n                      \"the idea came from me trying to get a more holistic understanding of the market to try and keep my roth ira a net positive (unsuccessful so far)\",\n                      \"MVP deployed version is up!\",\n                    ],\n                    dates: 'feb 2025 - apr 2025',\n                    deployment: \"https://stock-sense-client.vercel.app\",\n                    github: \"https://github.com/kylehton/StockSense\",\n                    video: \"https://youtu.be/O8MnoRQEqNk\"\n                  }}\n              />\n                \n              </div>\n              </div>\n            </div>\n        </main>\n    );\n}\n\nexport default Projects;",
    "path": "app/components/main/Projects.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/NameAndMenu.js-0-9f43403c0120e6e246034f6a32c276e17130ce0dd739e00928eeb361cf6e9916": {
    "text": "'use client';\nimport { Menu } from 'lucide-react';\nimport React, { useState } from 'react';",
    "path": "app/components/main/NameAndMenu.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/NameAndMenu.js-2-085ea957e42464f329ea1ce79ad8eec7de1fab1ed81eb18cbc8ba3dc3ad6324d": {
    "text": "const [isMenuOpen, setIsMenuOpen] = useState(false);",
    "path": "app/components/main/NameAndMenu.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/portfolio/app/components/main/NameAndMenu.js-3-d4b9f01eb6f1e51de2d68802a7b8eb969eae754aaaa423dba0c844fd6664d4fa": {
    "text": "const menuItems = [\n        { title: 'education', delay: 'delay-500', id: 'education' },\n        { title: 'experience', delay: 'delay-300', id: 'experience'},\n        { title: 'projects', delay: 'delay-100', id: 'projects'}\n    ];\n\n    return (\n        <header className=\"sm:mt-4 2xl:mt-4 px-4 lg:px-12 py-4\">\n            <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center\">\n                {/* Title content */}\n                <div className=\"order-2 sm:order-1 flex items-center mt-6 sm:mt-0\">\n                    <h1 className=\"font-semibold text-2xl lg:text-3xl\">kyle ton</h1>\n                    <span className=\"text-xl font-normal mx-4 text-zinc-600\">|</span>\n                    <span className=\"mt-1 text-sm font-light text-zinc-500\">\n                        student, software engineer\n                    </span>\n                </div>\n\n                {/* Menu Container */}\n                <div id=\"menu-container\" className=\"order-1 sm:order-2 relative flex justify-end\">\n                    {/* Menu Items */}\n                    <div className=\"absolute right-8 lg:right-full top-1/2 -translate-y-1/2 flex items-center mt-[2px] lg:mr-4\">\n                        {menuItems.map((item) => (\n                            <a\n                                key={item.title}\n                                href={`#${item.id}`}\n                                className={`\n                                    mr-4 lg:mr-8 text-sm lg:text-lg font-normal text-zinc-600\n                                    transition-all duration-500 ease-in-out\n                                    ${item.delay}\n                                    ${isMenuOpen \n                                        ? 'opacity-100 translate-x-0' \n                                        : 'opacity-0 translate-x-16 pointer-events-none'\n                                    }\n                                `}\n                            >\n                                {item.title}\n                            </a>\n                        ))}\n                    </div>\n                    {/* Menu Button */}\n                    <button \n                        onClick={() => setIsMenuOpen(!isMenuOpen)}\n                        className=\"focus:outline-none relative z-10\"\n                        aria-label=\"Toggle menu\"\n                    >\n                        <Menu className=\"mt-2 h-4 w-4 lg:h-6 lg:w-6\" />\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n}\n\nexport default NameAndMenu;",
    "path": "app/components/main/NameAndMenu.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/components/main/Intro.js-0-079d05f251827cf66a1ba9fd9f18e7c12b7412ee20ad06082425df994f45ec6b": {
    "text": "'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport ResumeDownloadButton from '../models/ResumeDownloadButton';",
    "path": "app/components/main/Intro.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/Intro.js-2-49e98a30bf9fdb4cf20169b78eae314c98473580b438d9b9625836ffcfe76f39": {
    "text": "const [currentImageIndex, setCurrentImageIndex] = useState(0);",
    "path": "app/components/main/Intro.js",
    "chunk_id": 2
  },
  "/Users/kht/repos/portfolio/app/components/main/Intro.js-3-a9afe64f9f7dea781b468a072f63b4afdf6ba0fc31bc6e385a64d157a153d870": {
    "text": "const images = [\n        'images/intro/IMG_0076.JPEG',\n        'images/intro/IMG_0028.JPG',\n        'images/intro/IMG_0086.JPEG',\n        'images/intro/IMG_0088.JPG',\n        'images/intro/IMG_0092.JPEG',\n        'images/intro/IMG_0133.JPEG',\n        'images/intro/IMG_0235.JPG',\n        'images/intro/IMG_0219.JPG',\n        'images/intro/IMG_0269.JPEG',\n    ];\n\n    useEffect(() => {",
    "path": "app/components/main/Intro.js",
    "chunk_id": 3
  },
  "/Users/kht/repos/portfolio/app/components/main/Intro.js-4-805b6b4afad505441d6b04d0403d97cce265ff19416f5d09ef30ebe15db7fa21": {
    "text": "const interval = setInterval(() => {\n            setCurrentImageIndex((prevIndex) => (prevIndex + 1) % images.length);\n        }, 3000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div id='intro-wrapper'>\n            <main id='biography' className=\"px-4 pt-10 sm:py-4 md:py-6 sm:mt-2 sm:px-28 lg:px-16\">\n                <div className=\"2xl:ml-6 mb-10 flex flex-col lg:flex-row gap-8 lg:gap-16\">\n                    <div className=\"lg:w-3/5\"> \n                        <h2 className=\"2xl:text-3xl font-medium text-[32px] mb-6 2xl:mb-12\">hello, i'm . . .</h2> {/* Increased margin bottom for 2xl */}\n                        <div className=\"text-sm 2xl:text-lg space-y-6 max-w-prose\">\n                            <p className=\"2xl:font-extralight font-light\">\n                                kyle ton, a <span className=\"font-semibold\">sophomore</span> at\n                                <span className=\"font-semibold\"> orange coast college</span> studying\n                                <span className=\"font-semibold\"> computer science!</span> i am an \n                                aspiring software engineer with a passion for creating and developing \n                                full-stack applications, with some cloud computing and machine learning \n                                integration.\n                            </p>\n                            <p className=\"2xl:font-extralight font-light \">\n                                i have a large interest in machine learning and ai, particularly in \n                                language models <span className=\"font-semibold\"> natural language processing </span> \n                                and be able to work on integrating machine learning with software development,\n                                or even directly contribute to the advancement of the field itself!\n                                i am getting started with machine learning models right now, teaching myself\n                                the basics of machine learning and ai, and i hope to apply this towards \n                                cool projects in the future!\n                            </p>\n                            <p className=\"2xl:font-extralight font-light\">\n                                my goal for my career one day is to become a\n                                <span className=\"font-semibold\"> full-stack software engineer! </span> \n                                perhaps one day, i will try to transition into machine learning \n                                and ai engineer roles and contribute to the advancement of the \n                                artificial intelligence sector! please feel free to contact me for \n                                anything at all!\n                            </p>\n                        <ResumeDownloadButton />\n                        </div>\n                    </div>\n\n                    {/* Image section */}\n                    <div className=\"mt-6 lg:w-2/5 2xl:w-[45%]\">\n                        <div className=\"relative aspect-[4/3] w-full max-w-xl mx-auto\">\n                            <img \n                                src={images[currentImageIndex]} \n                                alt={`carousel image ${currentImageIndex + 1}`} \n                                className=\"w-full h-full object-cover rounded-lg border-2 border-zinc-500\"\n                                \n                            />\n                            <p className=\"mr-2 mt-2 text-xs text-right font-mono\">canon sd700is - japan 04.2024</p>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default Intro;",
    "path": "app/components/main/Intro.js",
    "chunk_id": 4
  },
  "/Users/kht/repos/portfolio/app/components/main/Footer.js-1-ce75996c5ce0f1c91053fe4d5aec4f57f1370ba8b13f34a5b4ad0a46577d8ac7": {
    "text": "const Footer = () => {\n\n    return (\n        <div className='mt-10 mb-8 w-full flex justify-end'>\n            <p className='font-extralight mr-5 lg:mt-20 lg:mr-10 text-[10px] text-right text-zinc-500 w-2/5 lg:w-1/5'>\n                thank you for visiting my website! it was made completely from scratch using tailwindcss, next.js, shadcn, magic ui, and framer motion.\n            </p>\n        </div>\n    )\n}\nexport default Footer;",
    "path": "app/components/main/Footer.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/portfolio/app/components/main/Socials.js-0-314df7f1dc7844d7d1e95bfe09a73b29631b4aed738953c94eb383d0a59b539f": {
    "text": "import GitHubCalendar from \"react-github-calendar\";\nimport ScrollMotionWrapper from \"../../motion/ScrollMotionWrapper\";\nimport { Button } from '@/components/ui/resumebutton';",
    "path": "app/components/main/Socials.js",
    "chunk_id": 0
  },
  "/Users/kht/repos/portfolio/app/components/main/Socials.js-1-c04c2629a92943afab201352e41bfae87d9139213559bf8b0f94f3f2ce2d8500": {
    "text": "const Socials = () => {\n\n    return (  \n        <main id='socials' className=\"px-4 lg:px-16 py-8\">\n        <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-16\">\n        <div className='lg:min-w-full'>\n            <ScrollMotionWrapper \n              contents={\n                <h1 className=\"font-medium text-[30px] mb-2\">socials \n                  <span className='text-[20px] font-extralight'>&nbsp; [@kylehton]</span>\n                </h1>\n              }>\n            </ScrollMotionWrapper>\n\n            <div className=\"ml-3 space-y-8\">\n              <ScrollMotionWrapper \n                contents={\n                    <div id='my-social-links' className='flex flex-col font-normal text-[18px] text-zinc-500'> \n                        <a target='_blank' href='https://www.linkedin.com/in/kyle-ton/' className='w-min'>\n                            <Button className=\"bg-[#0A66C2] text-white font-bold py-2 px-4 lg:py-2 lg:px-5 border-2 border-white rounded-md \n                                  shadow-[3px_3px_0px_0px_gray] hover:shadow-[1px_1px_0px_0px_white] hover:translate-x-[2px] \n                                  hover:translate-y-[2px] mt-3 hover:scale-[1.02] hover:bg-[#004182] transition-all mr-4\">\n                                      linkedin\n                            </Button>\n                        </a>\n                        <a target='_blank' href='https://www.github.com/kylehton/' className='w-min'>\n                            <Button className=\"bg-zinc-700 text-white font-bold py-2 px-5 lg:py-2 lg:px-6 border-2 border-white rounded-md \n                                  shadow-[3px_3px_0px_0px_black] hover:shadow-[1px_1px_0px_0px_white] hover:translate-x-[2px] \n                                  hover:translate-y-[2px] mt-4 hover:scale-[1.02] hover:bg-[#5FA85F] transition-all mr-4\">\n                                        github\n                            </Button>\n                        </a>\n                        <a target='_blank' href='https://www.devpost.com/kylehton/' className='w-min'>\n                            <Button className=\"bg-[#12394c] text-white font-bold py-2 px-4 lg:py-2 lg:px-5 border-2 border-white rounded-md \n                                    shadow-[3px_3px_0px_0px_#6BD1EC] hover:shadow-[1px_1px_0px_0px_white] hover:translate-x-[2px] \n                                    hover:translate-y-[2px] mt-4 hover:scale-[1.02] hover:bg-[#3BA29D] transition-all mr-4\">\n                                        devpost\n                            </Button>\n                        </a>\n                    </div>\n                }>\n              </ScrollMotionWrapper>\n              \n              <ScrollMotionWrapper \n                contents={\n                  <div className=\"github-calendar-container prestige-elite\">\n                    <h3 className='text-zinc-800 font-semibold text-xl mt-20 mb-6'>my github contributions</h3>\n                    <div className=\"text-zinc-700 github-calendar\">\n                      <GitHubCalendar\n                        username=\"kylehton\"\n                        theme={{\n                          dark: [\"#d1d5db\", \"#e9d5ff\", \"#d8b4fe\", \"#c084fc\", \"#a855f7\"], \n                          light: [\"#d1d5db\", \"#e9d5ff\", \"#d8b4fe\", \"#c084fc\", \"#a855f7\"]\n                        }}\n                      />\n                    </div>\n                  </div>\n                }>\n              </ScrollMotionWrapper>\n\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n}\n\nexport default Socials;",
    "path": "app/components/main/Socials.js",
    "chunk_id": 1
  },
  "/Users/kht/repos/MatchPointAI/FeatureEngineering.py-0-2f98ee2e196f471a28f09f5c17d8606a2358b17b0cef3b2d9a6f1a31a7c905d0": {
    "text": "import numpy as np\nimport pandas as pd\nimport os\nfrom tqdm import tqdm  # Import tqdm for progress bars\n\n# Load data",
    "path": "FeatureEngineering.py",
    "chunk_id": 0
  },
  "/Users/kht/repos/MatchPointAI/FeatureEngineering.py-1-2bdfac2fae3adbae3f292e41fadd7486691eb40a4c04e3656f641e6e4128b643": {
    "text": "def load_data(directory):\n    print(\"Loading data files...\")\n    dataframes = []\n    # Get list of CSV files\n    csv_files = [f for f in os.listdir(directory) if f.endswith('.csv')]\n    \n    # Use tqdm to show progress while loading files\n    for filename in tqdm(csv_files, desc=\"Loading CSV files\"):\n        df = pd.read_csv(os.path.join(directory, filename))\n        dataframes.append(df)\n    return pd.concat(dataframes, ignore_index=True)",
    "path": "FeatureEngineering.py",
    "chunk_id": 1
  },
  "/Users/kht/repos/MatchPointAI/FeatureEngineering.py-2-ae359eb73667724f6a6e9229763729b64d21b58f871155d0d59ffd5ce961558b": {
    "text": "def calculate_player_stats(df, window=10):\n    \"\"\"Calculate rolling statistics for each player\"\"\"\n    df = df.copy()\n    df = df.sort_values('tourney_date')\n    \n    # Initialize empty DataFrames for winner and loser stats\n    winner_stats = pd.DataFrame()\n    loser_stats = pd.DataFrame()\n    \n    # Get unique player lists\n    winners = df['winner_name'].unique()\n    losers = df['loser_name'].unique()\n    all_players = set(winners) | set(losers)\n    \n    print(\"Calculating player stats...\")\n    for player in tqdm(set(winners) | set(losers), desc=\"Processing players\"):\n        # Get all matches for this player\n        player_matches = df[(df['winner_name'] == player) | (df['loser_name'] == player)].sort_values('tourney_date')\n        \n        if len(player_matches) > 0:\n            # Calculate surface-specific win rates using a more direct approach\n            surface_win_rates = {}\n            for surface in ['Hard', 'Clay', 'Grass']:\n                surface_matches = player_matches[player_matches['surface'] == surface]\n                if len(surface_matches) > 0:\n                    surface_win_rates[surface] = (surface_matches['winner_name'] == player).mean()\n                else:\n                    surface_win_rates[surface] = 0.5  # Default win rate if no matches on surface\n            \n            # Calculate recent form (last window matches)\n            recent_matches = player_matches.tail(window)\n            recent_win_rate = (recent_matches['winner_name'] == player).mean()\n            \n            # Calculate overall stats\n            total_matches = len(player_matches)\n            total_wins = (player_matches['winner_name'] == player).sum()\n            overall_win_rate = total_wins / total_matches\n            \n            # Store stats\n            stats = pd.DataFrame({\n                'player_name': [player],\n                'total_matches': [total_matches],\n                'overall_win_rate': [overall_win_rate],\n                'recent_win_rate': [recent_win_rate],\n                'current_rank': [player_matches.iloc[-1]['winner_rank'] if player_matches.iloc[-1]['winner_name'] == player \n                               else player_matches.iloc[-1]['loser_rank']],\n                'current_rank_points': [player_matches.iloc[-1]['winner_rank_points'] if player_matches.iloc[-1]['winner_name'] == player \n                                      else player_matches.iloc[-1]['loser_rank_points']],\n                'age': [player_matches.iloc[-1]['winner_age'] if player_matches.iloc[-1]['winner_name'] == player \n                       else player_matches.iloc[-1]['loser_age']],\n                'height': [player_matches.iloc[-1]['winner_ht'] if player_matches.iloc[-1]['winner_name'] == player \n                          else player_matches.iloc[-1]['loser_ht']],\n                'hand': [player_matches.iloc[-1]['winner_hand'] if player_matches.iloc[-1]['winner_name'] == player \n                        else player_matches.iloc[-1]['loser_hand']],\n                'hard_win_rate': [surface_win_rates['Hard']],\n                'clay_win_rate': [surface_win_rates['Clay']],\n                'grass_win_rate': [surface_win_rates['Grass']]\n            })\n            \n            if player in winners:\n                winner_stats = pd.concat([winner_stats, stats])\n            if player in losers:\n                loser_stats = pd.concat([loser_stats, stats])\n    \n    return winner_stats, loser_stats",
    "path": "FeatureEngineering.py",
    "chunk_id": 2
  },
  "/Users/kht/repos/MatchPointAI/FeatureEngineering.py-3-a0f173a8f3dfe113fd42e83ea2f101bfc5e090e7c9c19b3542ccb48d389a22da": {
    "text": "def calculate_h2h_stats(df):\n    \"\"\"Calculate head-to-head statistics between players\"\"\"\n    print(\"Calculating head-to-head records...\")\n    \n    # Create a list of all matchups\n    matchups = []\n    \n    # Use tqdm to track matchup processing\n    with tqdm(total=len(df), desc=\"Processing matchups\") as h2h_pbar:\n        for _, row in df.iterrows():\n            # Add matchup in both directions\n            matchups.append({\n                'player1': row['winner_name'],\n                'player2': row['loser_name'],\n                'winner': 'player1',\n                'surface': row['surface'],\n                'date': row['tourney_date']\n            })\n            matchups.append({\n                'player1': row['loser_name'],\n                'player2': row['winner_name'],\n                'winner': 'player2',\n                'surface': row['surface'],\n                'date': row['tourney_date']\n            })\n            h2h_pbar.update(1)\n    \n    h2h_df = pd.DataFrame(matchups)\n    \n    # Calculate overall H2H with progress indicator\n    print(\"Calculating overall head-to-head statistics...\")\n    h2h_stats = h2h_df.groupby(['player1', 'player2']).agg(\n        total_matches=('winner', 'count'),\n        player1_wins=('winner', lambda x: (x == 'player1').sum())\n    ).reset_index()\n    \n    h2h_stats['h2h_winrate'] = h2h_stats['player1_wins'] / h2h_stats['total_matches']\n    \n    # Calculate surface-specific H2H with progress tracking\n    print(\"Calculating surface-specific head-to-head statistics...\")\n    surfaces = ['Hard', 'Clay', 'Grass']\n    with tqdm(total=len(surfaces), desc=\"Processing surfaces\") as surface_pbar:\n        for surface in surfaces:\n            surface_h2h = h2h_df[h2h_df['surface'] == surface].groupby(['player1', 'player2']).agg({\n                f'{surface.lower()}_matches': ('winner', 'count'),\n                f'{surface.lower()}_player1_wins': ('winner', lambda x: (x == 'player1').sum())\n            }).reset_index()\n            \n            surface_h2h[f'{surface.lower()}_h2h_winrate'] = surface_h2h[f'{surface.lower()}_player1_wins'] / \\\n                                                           surface_h2h[f'{surface.lower()}_matches']\n            \n            h2h_stats = h2h_stats.merge(surface_h2h, on=['player1', 'player2'], how='left')\n            surface_pbar.update(1)\n    \n    return h2h_stats\n\n# Feature Engineering",
    "path": "FeatureEngineering.py",
    "chunk_id": 3
  },
  "/Users/kht/repos/MatchPointAI/FeatureEngineering.py-4-858e2c2d292cd853430db4510450a6477a2cbc62dc339560a10eefd3c54176d2": {
    "text": "def engineer_features(df_input):\n    print(\"Engineering features...\")\n    # Make a copy of the input DataFrame to avoid SettingWithCopyWarning\n    df = df_input.copy()\n    \n    # Use tqdm for tracking progress through major steps\n    steps = [\"Surface encoding\", \"Hand encoding\", \"Height features\", \"H2H records\", \n             \"Rolling stats\", \"Merging features\", \"Final cleaning\"]\n    progress_bar = tqdm(steps, desc=\"Feature engineering steps\")\n    \n    # 1. Surface encoding (Hard=0, Clay=1, Grass=2)\n    surface_map = {'Hard': 0, 'Clay': 1, 'Grass': 2}\n    df['surface_encoded'] = df['surface'].map(surface_map)\n    progress_bar.update(1)  # Update progress bar\n    \n    # 2. Hand encoding (L=0, R=1)\n    df['winner_hand_encoded'] = df['winner_hand'].map({'L': 0, 'R': 1})\n    df['loser_hand_encoded'] = df['loser_hand'].map({'L': 0, 'R': 1})\n    progress_bar.update(1)  # Update progress bar\n    \n    # 3. Height features\n    df['height_diff'] = df['winner_ht'] - df['loser_ht']\n    df['winner_height'] = df['winner_ht']\n    df['loser_height'] = df['loser_ht']\n    progress_bar.update(1)  # Update progress bar\n    \n    # 4. Calculate head-to-head records\n    print(\"Calculating head-to-head records...\")\n    # Create progress bar for H2H data preparation\n    with tqdm(total=2, desc=\"Preparing H2H data\") as h2h_prep_bar:\n        df_reversed = df.copy()\n        df_reversed[['player1', 'player2']] = df[['loser_name', 'winner_name']]\n        df_reversed['winner'] = 'player2'\n        h2h_prep_bar.update(1)\n        \n        df_original = df.copy()\n        df_original[['player1', 'player2']] = df[['winner_name', 'loser_name']]\n        df_original['winner'] = 'player1'\n        h2h_prep_bar.update(1)\n    \n    print(\"Concatenating H2H data...\")\n    h2h_df = pd.concat([df_original[['player1', 'player2', 'winner']], \n                       df_reversed[['player1', 'player2', 'winner']]])\n    \n    print(\"Calculating H2H statistics...\")\n    # Create progress bar for unique player pairs\n    unique_pairs = h2h_df[['player1', 'player2']].drop_duplicates()\n    \n    h2h_stats = h2h_df.groupby(['player1', 'player2']).agg(\n        wins_player1=('winner', lambda x: (x == 'player1').sum()),\n        total_matches=('winner', 'count')\n    ).reset_index()\n    \n    h2h_stats['winrate_player1'] = h2h_stats['wins_player1'] / h2h_stats['total_matches']\n    progress_bar.update(1)  # Update progress bar\n    \n    # 5. Calculate rolling statistics\n    print(\"Calculating player rolling statistics...\")\n    winner_stats, loser_stats = calculate_player_stats(df)\n    progress_bar.update(1)  # Update progress bar\n    \n    # Merge all features\n    print(\"Merging all features...\")\n    # Use tqdm to track merging operations\n    merge_steps = [\"H2H merge\", \"Winner stats merge\", \"Loser stats merge\", \"Final processing\"]\n    with tqdm(total=len(merge_steps), desc=\"Merging features\") as merge_bar:\n        # Merge H2H stats\n        result_df = df.merge(\n            h2h_stats[['player1', 'player2', 'winrate_player1']],\n            left_on=['winner_name', 'loser_name'],\n            right_on=['player1', 'player2'],\n            how='left'\n        )\n        merge_bar.update(1)\n        \n        # Merge winner stats\n        result_df = result_df.merge(\n            winner_stats,\n            left_on='winner_name',\n            right_on='player_name',\n            how='left',\n            suffixes=('', '_winner')\n        )\n        merge_bar.update(1)\n        \n        # Merge loser stats\n        result_df = result_df.merge(\n            loser_stats,\n            left_on='loser_name',\n            right_on='player_name',\n            how='left',\n            suffixes=('', '_loser')\n        )\n        merge_bar.update(1)\n        \n        # Add target variable and clean up\n        result_df['target'] = 1  # Since we're using winner_name as player1, this is always 1\n        result_df = result_df.drop(['player1', 'player2', 'player_name', 'player_name_winner', 'player_name_loser'], axis=1, errors='ignore')\n        merge_bar.update(1)\n    \n    progress_bar.update(1)  # Update progress bar for merging features\n    \n    # Select only the features we want\n    selected_features = [\n        'tourney_date',\n        'winner_name',\n        'loser_name',\n        'surface_encoded',\n        'winner_hand_encoded',\n        'loser_hand_encoded',\n        'height_diff',\n        'winrate_player1',\n        'overall_win_rate_winner',\n        'overall_win_rate_loser',\n        'recent_win_rate_winner',\n        'recent_win_rate_loser',\n        'hard_win_rate_winner',\n        'hard_win_rate_loser',\n        'clay_win_rate_winner',\n        'clay_win_rate_loser',\n        'grass_win_rate_winner',\n        'grass_win_rate_loser',\n        'target'\n    ]\n    \n    # Create a balanced dataset by duplicating rows and swapping winner/loser\n    print(\"Creating balanced dataset...\")\n    balance_steps = [\"Creating winner perspective\", \"Creating loser perspective\", \"Combining datasets\", \"Final cleanup\"]\n    with tqdm(total=len(balance_steps), desc=\"Balancing dataset\") as balance_bar:\n        # Original rows (winner perspective)\n        winner_df = result_df.copy()\n        winner_df['target'] = 1\n        balance_bar.update(1)\n        \n        # Create loser perspective rows\n        loser_df = result_df.copy()\n        # Swap winner and loser columns\n        loser_df = loser_df.rename(columns={\n            'winner_name': 'loser_name',\n            'loser_name': 'winner_name',\n            'winner_hand_encoded': 'loser_hand_encoded',\n            'loser_hand_encoded': 'winner_hand_encoded',\n            'height_diff': 'height_diff',\n            'overall_win_rate_winner': 'overall_win_rate_loser',\n            'overall_win_rate_loser': 'overall_win_rate_winner',\n            'recent_win_rate_winner': 'recent_win_rate_loser',\n            'recent_win_rate_loser': 'recent_win_rate_winner',\n            'hard_win_rate_winner': 'hard_win_rate_loser',\n            'hard_win_rate_loser': 'hard_win_rate_winner',\n            'clay_win_rate_winner': 'clay_win_rate_loser',\n            'clay_win_rate_loser': 'clay_win_rate_winner',\n            'grass_win_rate_winner': 'grass_win_rate_loser',\n            'grass_win_rate_loser': 'grass_win_rate_winner'\n        })\n        loser_df['height_diff'] = -loser_df['height_diff']  # Invert height difference\n        loser_df['target'] = 0\n        balance_bar.update(1)\n        \n        # Combine both perspectives\n        balanced_df = pd.concat([winner_df, loser_df], ignore_index=True)\n        balance_bar.update(1)\n        \n        # Handle missing values\n        print(\"Handling missing values...\")\n        # Fill missing values with appropriate defaults\n        balanced_df['height_diff'] = balanced_df['height_diff'].fillna(0)  # No height difference if missing\n        balanced_df['winrate_player1'] = balanced_df['winrate_player1'].fillna(0.5)  # Equal chance if no H2H\n        \n        # Fill missing win rates with 0.5 (equal chance)\n        win_rate_columns = [col for col in balanced_df.columns if 'win_rate' in col]\n        balanced_df[win_rate_columns] = balanced_df[win_rate_columns].fillna(0.5)\n        \n        # Fill missing hand encodings with 1 (right-handed as default)\n        balanced_df['winner_hand_encoded'] = balanced_df['winner_hand_encoded'].fillna(1)\n        balanced_df['loser_hand_encoded'] = balanced_df['loser_hand_encoded'].fillna(1)\n        \n        # Check if all selected features exist in the DataFrame\n        available_features = [f for f in selected_features if f in balanced_df.columns]\n        final_df = balanced_df[available_features]\n        \n        # Sort by date to ensure chronological order\n        final_df = final_df.sort_values('tourney_date')\n        balance_bar.update(1)\n    \n    progress_bar.update(1)  # Update progress bar for final cleaning\n    \n    # Close the progress bar\n    progress_bar.close()\n    \n    return final_df\n\n# Main function",
    "path": "FeatureEngineering.py",
    "chunk_id": 4
  },
  "/Users/kht/repos/MatchPointAI/FeatureEngineering.py-5-107c7b601aca107ff02e0f4d7b736e2c269cb5c93db082426895502ae3e8372a": {
    "text": "def main():\n    print(\"=== Tennis Match Feature Engineering ===\")\n    directory = 'datasets/atp_matches/'\n    \n    # Overall progress tracking\n    main_steps = [\"Loading data\", \"Date conversion\", \"Train/test split\", \"Train feature engineering\", \n                 \"Test feature engineering\", \"Saving results\"]\n    main_progress = tqdm(main_steps, desc=\"Overall progress\")\n    \n    df = load_data(directory)\n    main_progress.update(1)  # Update main progress\n    \n    print(f\"Data loaded: {len(df)} matches\")\n    \n    # Convert tourney_date to datetime\n    print(\"Converting dates...\")\n    with tqdm(total=1, desc=\"Converting dates\") as date_bar:\n        df['tourney_date'] = pd.to_datetime(df['tourney_date'], format='%Y%m%d')\n        date_bar.update(1)\n    \n    # Sort the entire dataset by date first\n    print(\"Sorting dataset by date...\")\n    with tqdm(total=1, desc=\"Sorting dataset\") as sort_bar:\n        df = df.sort_values('tourney_date')\n        sort_bar.update(1)\n    \n    main_progress.update(1)  # Update main progress\n    \n    # Split data into train and test sets based on year\n    print(\"Splitting into train and test sets...\")\n    with tqdm(total=2, desc=\"Splitting data\") as split_bar:\n        train_df = df[df['tourney_date'].dt.year < 2008].copy()\n        split_bar.update(1)\n        \n        test_df = df[df['tourney_date'].dt.year >= 2008].copy()\n        split_bar.update(1)\n    \n    print(f\"Training set: {len(train_df)} matches (1968-2007)\")\n    print(f\"Test set: {len(test_df)} matches (2008-2024)\")\n    \n    main_progress.update(1)  # Update main progress\n    \n    # Engineer features for both sets\n    print(\"\\nProcessing training set...\")\n    train_features = engineer_features(train_df)\n    main_progress.update(1)  # Update main progress\n    \n    print(\"\\nProcessing test set...\")\n    test_features = engineer_features(test_df)\n    main_progress.update(1)  # Update main progress\n    \n    # Save to CSV files\n    print(\"\\nSaving results...\")\n    with tqdm(total=2, desc=\"Saving files\") as save_bar:\n        train_features.to_csv('train_new_features.csv', index=False)\n        save_bar.update(1)\n        \n        test_features.to_csv('test_new_features.csv', index=False)\n        save_bar.update(1)\n    \n    main_progress.update(1)  # Update main progress\n    main_progress.close()\n    \n    print(\"\\n=== Feature engineering complete ===\")\n    print(f\"Train features (1968-2007): {len(train_features)} samples saved to 'train_new_features.csv'\")\n    print(f\"Test features (2008-2024): {len(test_features)} samples saved to 'test_new_features.csv'\")\n\nif __name__ == \"__main__\":\n    main()",
    "path": "FeatureEngineering.py",
    "chunk_id": 5
  }
}